// Code generated by protoc-gen-go. DO NOT EDIT.
// source: play_common.proto

package libreplay

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HttpCookie struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value                *string  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpCookie) Reset()         { *m = HttpCookie{} }
func (m *HttpCookie) String() string { return proto.CompactTextString(m) }
func (*HttpCookie) ProtoMessage()    {}
func (*HttpCookie) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{0}
}

func (m *HttpCookie) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpCookie.Unmarshal(m, b)
}
func (m *HttpCookie) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpCookie.Marshal(b, m, deterministic)
}
func (m *HttpCookie) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpCookie.Merge(m, src)
}
func (m *HttpCookie) XXX_Size() int {
	return xxx_messageInfo_HttpCookie.Size(m)
}
func (m *HttpCookie) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpCookie.DiscardUnknown(m)
}

var xxx_messageInfo_HttpCookie proto.InternalMessageInfo

func (m *HttpCookie) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *HttpCookie) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type TimePeriod struct {
	Unit                 *int32   `protobuf:"varint,1,opt,name=unit" json:"unit,omitempty"`
	Count                *int32   `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimePeriod) Reset()         { *m = TimePeriod{} }
func (m *TimePeriod) String() string { return proto.CompactTextString(m) }
func (*TimePeriod) ProtoMessage()    {}
func (*TimePeriod) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{1}
}

func (m *TimePeriod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimePeriod.Unmarshal(m, b)
}
func (m *TimePeriod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimePeriod.Marshal(b, m, deterministic)
}
func (m *TimePeriod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimePeriod.Merge(m, src)
}
func (m *TimePeriod) XXX_Size() int {
	return xxx_messageInfo_TimePeriod.Size(m)
}
func (m *TimePeriod) XXX_DiscardUnknown() {
	xxx_messageInfo_TimePeriod.DiscardUnknown(m)
}

var xxx_messageInfo_TimePeriod proto.InternalMessageInfo

func (m *TimePeriod) GetUnit() int32 {
	if m != nil && m.Unit != nil {
		return *m.Unit
	}
	return 0
}

func (m *TimePeriod) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type MonthAndDay struct {
	Month                *int32   `protobuf:"varint,1,opt,name=month" json:"month,omitempty"`
	Day                  *int32   `protobuf:"varint,2,opt,name=day" json:"day,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MonthAndDay) Reset()         { *m = MonthAndDay{} }
func (m *MonthAndDay) String() string { return proto.CompactTextString(m) }
func (*MonthAndDay) ProtoMessage()    {}
func (*MonthAndDay) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{2}
}

func (m *MonthAndDay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MonthAndDay.Unmarshal(m, b)
}
func (m *MonthAndDay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MonthAndDay.Marshal(b, m, deterministic)
}
func (m *MonthAndDay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MonthAndDay.Merge(m, src)
}
func (m *MonthAndDay) XXX_Size() int {
	return xxx_messageInfo_MonthAndDay.Size(m)
}
func (m *MonthAndDay) XXX_DiscardUnknown() {
	xxx_messageInfo_MonthAndDay.DiscardUnknown(m)
}

var xxx_messageInfo_MonthAndDay proto.InternalMessageInfo

func (m *MonthAndDay) GetMonth() int32 {
	if m != nil && m.Month != nil {
		return *m.Month
	}
	return 0
}

func (m *MonthAndDay) GetDay() int32 {
	if m != nil && m.Day != nil {
		return *m.Day
	}
	return 0
}

type SignedData struct {
	SignedData           *string  `protobuf:"bytes,1,opt,name=signedData" json:"signedData,omitempty"`
	Signature            *string  `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignedData) Reset()         { *m = SignedData{} }
func (m *SignedData) String() string { return proto.CompactTextString(m) }
func (*SignedData) ProtoMessage()    {}
func (*SignedData) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{3}
}

func (m *SignedData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedData.Unmarshal(m, b)
}
func (m *SignedData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedData.Marshal(b, m, deterministic)
}
func (m *SignedData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedData.Merge(m, src)
}
func (m *SignedData) XXX_Size() int {
	return xxx_messageInfo_SignedData.Size(m)
}
func (m *SignedData) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedData.DiscardUnknown(m)
}

var xxx_messageInfo_SignedData proto.InternalMessageInfo

func (m *SignedData) GetSignedData() string {
	if m != nil && m.SignedData != nil {
		return *m.SignedData
	}
	return ""
}

func (m *SignedData) GetSignature() string {
	if m != nil && m.Signature != nil {
		return *m.Signature
	}
	return ""
}

type Docid struct {
	BackendDocid         *string  `protobuf:"bytes,1,opt,name=backendDocid" json:"backendDocid,omitempty"`
	Type                 *int32   `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Backend              *int32   `protobuf:"varint,3,opt,name=backend" json:"backend,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Docid) Reset()         { *m = Docid{} }
func (m *Docid) String() string { return proto.CompactTextString(m) }
func (*Docid) ProtoMessage()    {}
func (*Docid) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{4}
}

func (m *Docid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Docid.Unmarshal(m, b)
}
func (m *Docid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Docid.Marshal(b, m, deterministic)
}
func (m *Docid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Docid.Merge(m, src)
}
func (m *Docid) XXX_Size() int {
	return xxx_messageInfo_Docid.Size(m)
}
func (m *Docid) XXX_DiscardUnknown() {
	xxx_messageInfo_Docid.DiscardUnknown(m)
}

var xxx_messageInfo_Docid proto.InternalMessageInfo

func (m *Docid) GetBackendDocid() string {
	if m != nil && m.BackendDocid != nil {
		return *m.BackendDocid
	}
	return ""
}

func (m *Docid) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *Docid) GetBackend() int32 {
	if m != nil && m.Backend != nil {
		return *m.Backend
	}
	return 0
}

type Offer struct {
	Micros                              *int64                    `protobuf:"varint,1,opt,name=micros" json:"micros,omitempty"`
	CurrencyCode                        *string                   `protobuf:"bytes,2,opt,name=currencyCode" json:"currencyCode,omitempty"`
	FormattedAmount                     *string                   `protobuf:"bytes,3,opt,name=formattedAmount" json:"formattedAmount,omitempty"`
	ConvertedPrice                      []*Offer                  `protobuf:"bytes,4,rep,name=convertedPrice" json:"convertedPrice,omitempty"`
	CheckoutFlowRequired                *bool                     `protobuf:"varint,5,opt,name=checkoutFlowRequired" json:"checkoutFlowRequired,omitempty"`
	FullPriceMicros                     *int64                    `protobuf:"varint,6,opt,name=fullPriceMicros" json:"fullPriceMicros,omitempty"`
	FormattedFullAmount                 *string                   `protobuf:"bytes,7,opt,name=formattedFullAmount" json:"formattedFullAmount,omitempty"`
	OfferType                           *int32                    `protobuf:"varint,8,opt,name=offerType" json:"offerType,omitempty"`
	RentalTerms                         *RentalTerms              `protobuf:"bytes,9,opt,name=rentalTerms" json:"rentalTerms,omitempty"`
	OnSaleDate                          *int64                    `protobuf:"varint,10,opt,name=onSaleDate" json:"onSaleDate,omitempty"`
	PromotionLabel                      []string                  `protobuf:"bytes,11,rep,name=promotionLabel" json:"promotionLabel,omitempty"`
	SubscriptionTerms                   *SubscriptionTerms        `protobuf:"bytes,12,opt,name=subscriptionTerms" json:"subscriptionTerms,omitempty"`
	FormattedName                       *string                   `protobuf:"bytes,13,opt,name=formattedName" json:"formattedName,omitempty"`
	FormattedDescription                *string                   `protobuf:"bytes,14,opt,name=formattedDescription" json:"formattedDescription,omitempty"`
	Preorder                            *bool                     `protobuf:"varint,15,opt,name=preorder" json:"preorder,omitempty"`
	OnSaleDateDisplayTimeZoneOffsetMsec *int32                    `protobuf:"varint,16,opt,name=onSaleDateDisplayTimeZoneOffsetMsec" json:"onSaleDateDisplayTimeZoneOffsetMsec,omitempty"`
	LicensedOfferType                   *int32                    `protobuf:"varint,17,opt,name=licensedOfferType" json:"licensedOfferType,omitempty"`
	SubscriptionContentTerms            *SubscriptionContentTerms `protobuf:"bytes,18,opt,name=subscriptionContentTerms" json:"subscriptionContentTerms,omitempty"`
	OfferId                             *string                   `protobuf:"bytes,19,opt,name=offerId" json:"offerId,omitempty"`
	PreorderFulfillmentDisplayDate      *int64                    `protobuf:"varint,20,opt,name=preorderFulfillmentDisplayDate" json:"preorderFulfillmentDisplayDate,omitempty"`
	LicenseTerms                        *LicenseTerms             `protobuf:"bytes,21,opt,name=licenseTerms" json:"licenseTerms,omitempty"`
	TemporarilyFree                     *bool                     `protobuf:"varint,22,opt,name=temporarilyFree" json:"temporarilyFree,omitempty"`
	VoucherTerms                        *VoucherOfferTerms        `protobuf:"bytes,23,opt,name=voucherTerms" json:"voucherTerms,omitempty"`
	OfferPayment                        []*OfferPayment           `protobuf:"bytes,24,rep,name=offerPayment" json:"offerPayment,omitempty"`
	RepeatLastPayment                   *bool                     `protobuf:"varint,25,opt,name=repeatLastPayment" json:"repeatLastPayment,omitempty"`
	BuyButtonLabel                      *string                   `protobuf:"bytes,26,opt,name=buyButtonLabel" json:"buyButtonLabel,omitempty"`
	InstantPurchaseEnabled              *bool                     `protobuf:"varint,27,opt,name=instantPurchaseEnabled" json:"instantPurchaseEnabled,omitempty"`
	XXX_NoUnkeyedLiteral                struct{}                  `json:"-"`
	XXX_unrecognized                    []byte                    `json:"-"`
	XXX_sizecache                       int32                     `json:"-"`
}

func (m *Offer) Reset()         { *m = Offer{} }
func (m *Offer) String() string { return proto.CompactTextString(m) }
func (*Offer) ProtoMessage()    {}
func (*Offer) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{5}
}

func (m *Offer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Offer.Unmarshal(m, b)
}
func (m *Offer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Offer.Marshal(b, m, deterministic)
}
func (m *Offer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Offer.Merge(m, src)
}
func (m *Offer) XXX_Size() int {
	return xxx_messageInfo_Offer.Size(m)
}
func (m *Offer) XXX_DiscardUnknown() {
	xxx_messageInfo_Offer.DiscardUnknown(m)
}

var xxx_messageInfo_Offer proto.InternalMessageInfo

func (m *Offer) GetMicros() int64 {
	if m != nil && m.Micros != nil {
		return *m.Micros
	}
	return 0
}

func (m *Offer) GetCurrencyCode() string {
	if m != nil && m.CurrencyCode != nil {
		return *m.CurrencyCode
	}
	return ""
}

func (m *Offer) GetFormattedAmount() string {
	if m != nil && m.FormattedAmount != nil {
		return *m.FormattedAmount
	}
	return ""
}

func (m *Offer) GetConvertedPrice() []*Offer {
	if m != nil {
		return m.ConvertedPrice
	}
	return nil
}

func (m *Offer) GetCheckoutFlowRequired() bool {
	if m != nil && m.CheckoutFlowRequired != nil {
		return *m.CheckoutFlowRequired
	}
	return false
}

func (m *Offer) GetFullPriceMicros() int64 {
	if m != nil && m.FullPriceMicros != nil {
		return *m.FullPriceMicros
	}
	return 0
}

func (m *Offer) GetFormattedFullAmount() string {
	if m != nil && m.FormattedFullAmount != nil {
		return *m.FormattedFullAmount
	}
	return ""
}

func (m *Offer) GetOfferType() int32 {
	if m != nil && m.OfferType != nil {
		return *m.OfferType
	}
	return 0
}

func (m *Offer) GetRentalTerms() *RentalTerms {
	if m != nil {
		return m.RentalTerms
	}
	return nil
}

func (m *Offer) GetOnSaleDate() int64 {
	if m != nil && m.OnSaleDate != nil {
		return *m.OnSaleDate
	}
	return 0
}

func (m *Offer) GetPromotionLabel() []string {
	if m != nil {
		return m.PromotionLabel
	}
	return nil
}

func (m *Offer) GetSubscriptionTerms() *SubscriptionTerms {
	if m != nil {
		return m.SubscriptionTerms
	}
	return nil
}

func (m *Offer) GetFormattedName() string {
	if m != nil && m.FormattedName != nil {
		return *m.FormattedName
	}
	return ""
}

func (m *Offer) GetFormattedDescription() string {
	if m != nil && m.FormattedDescription != nil {
		return *m.FormattedDescription
	}
	return ""
}

func (m *Offer) GetPreorder() bool {
	if m != nil && m.Preorder != nil {
		return *m.Preorder
	}
	return false
}

func (m *Offer) GetOnSaleDateDisplayTimeZoneOffsetMsec() int32 {
	if m != nil && m.OnSaleDateDisplayTimeZoneOffsetMsec != nil {
		return *m.OnSaleDateDisplayTimeZoneOffsetMsec
	}
	return 0
}

func (m *Offer) GetLicensedOfferType() int32 {
	if m != nil && m.LicensedOfferType != nil {
		return *m.LicensedOfferType
	}
	return 0
}

func (m *Offer) GetSubscriptionContentTerms() *SubscriptionContentTerms {
	if m != nil {
		return m.SubscriptionContentTerms
	}
	return nil
}

func (m *Offer) GetOfferId() string {
	if m != nil && m.OfferId != nil {
		return *m.OfferId
	}
	return ""
}

func (m *Offer) GetPreorderFulfillmentDisplayDate() int64 {
	if m != nil && m.PreorderFulfillmentDisplayDate != nil {
		return *m.PreorderFulfillmentDisplayDate
	}
	return 0
}

func (m *Offer) GetLicenseTerms() *LicenseTerms {
	if m != nil {
		return m.LicenseTerms
	}
	return nil
}

func (m *Offer) GetTemporarilyFree() bool {
	if m != nil && m.TemporarilyFree != nil {
		return *m.TemporarilyFree
	}
	return false
}

func (m *Offer) GetVoucherTerms() *VoucherOfferTerms {
	if m != nil {
		return m.VoucherTerms
	}
	return nil
}

func (m *Offer) GetOfferPayment() []*OfferPayment {
	if m != nil {
		return m.OfferPayment
	}
	return nil
}

func (m *Offer) GetRepeatLastPayment() bool {
	if m != nil && m.RepeatLastPayment != nil {
		return *m.RepeatLastPayment
	}
	return false
}

func (m *Offer) GetBuyButtonLabel() string {
	if m != nil && m.BuyButtonLabel != nil {
		return *m.BuyButtonLabel
	}
	return ""
}

func (m *Offer) GetInstantPurchaseEnabled() bool {
	if m != nil && m.InstantPurchaseEnabled != nil {
		return *m.InstantPurchaseEnabled
	}
	return false
}

type RentalTerms struct {
	DEPRECATEDGrantPeriodSeconds    *int32      `protobuf:"varint,1,opt,name=DEPRECATEDGrantPeriodSeconds" json:"DEPRECATEDGrantPeriodSeconds,omitempty"`
	DEPRECATEDActivatePeriodSeconds *int32      `protobuf:"varint,2,opt,name=DEPRECATEDActivatePeriodSeconds" json:"DEPRECATEDActivatePeriodSeconds,omitempty"`
	GrantPeriod                     *TimePeriod `protobuf:"bytes,3,opt,name=grantPeriod" json:"grantPeriod,omitempty"`
	ActivatePeriod                  *TimePeriod `protobuf:"bytes,4,opt,name=activatePeriod" json:"activatePeriod,omitempty"`
	GrantEndTimeSeconds             *int64      `protobuf:"varint,5,opt,name=grantEndTimeSeconds" json:"grantEndTimeSeconds,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}    `json:"-"`
	XXX_unrecognized                []byte      `json:"-"`
	XXX_sizecache                   int32       `json:"-"`
}

func (m *RentalTerms) Reset()         { *m = RentalTerms{} }
func (m *RentalTerms) String() string { return proto.CompactTextString(m) }
func (*RentalTerms) ProtoMessage()    {}
func (*RentalTerms) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{6}
}

func (m *RentalTerms) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RentalTerms.Unmarshal(m, b)
}
func (m *RentalTerms) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RentalTerms.Marshal(b, m, deterministic)
}
func (m *RentalTerms) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RentalTerms.Merge(m, src)
}
func (m *RentalTerms) XXX_Size() int {
	return xxx_messageInfo_RentalTerms.Size(m)
}
func (m *RentalTerms) XXX_DiscardUnknown() {
	xxx_messageInfo_RentalTerms.DiscardUnknown(m)
}

var xxx_messageInfo_RentalTerms proto.InternalMessageInfo

func (m *RentalTerms) GetDEPRECATEDGrantPeriodSeconds() int32 {
	if m != nil && m.DEPRECATEDGrantPeriodSeconds != nil {
		return *m.DEPRECATEDGrantPeriodSeconds
	}
	return 0
}

func (m *RentalTerms) GetDEPRECATEDActivatePeriodSeconds() int32 {
	if m != nil && m.DEPRECATEDActivatePeriodSeconds != nil {
		return *m.DEPRECATEDActivatePeriodSeconds
	}
	return 0
}

func (m *RentalTerms) GetGrantPeriod() *TimePeriod {
	if m != nil {
		return m.GrantPeriod
	}
	return nil
}

func (m *RentalTerms) GetActivatePeriod() *TimePeriod {
	if m != nil {
		return m.ActivatePeriod
	}
	return nil
}

func (m *RentalTerms) GetGrantEndTimeSeconds() int64 {
	if m != nil && m.GrantEndTimeSeconds != nil {
		return *m.GrantEndTimeSeconds
	}
	return 0
}

type OfferPayment struct {
	Micros               *int64                  `protobuf:"varint,1,opt,name=micros" json:"micros,omitempty"`
	CurrencyCode         *string                 `protobuf:"bytes,2,opt,name=currencyCode" json:"currencyCode,omitempty"`
	OfferPaymentPeriod   *OfferPaymentPeriod     `protobuf:"bytes,3,opt,name=offerPaymentPeriod" json:"offerPaymentPeriod,omitempty"`
	OfferPaymentOverride []*OfferPaymentOverride `protobuf:"bytes,4,rep,name=offerPaymentOverride" json:"offerPaymentOverride,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *OfferPayment) Reset()         { *m = OfferPayment{} }
func (m *OfferPayment) String() string { return proto.CompactTextString(m) }
func (*OfferPayment) ProtoMessage()    {}
func (*OfferPayment) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{7}
}

func (m *OfferPayment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfferPayment.Unmarshal(m, b)
}
func (m *OfferPayment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfferPayment.Marshal(b, m, deterministic)
}
func (m *OfferPayment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfferPayment.Merge(m, src)
}
func (m *OfferPayment) XXX_Size() int {
	return xxx_messageInfo_OfferPayment.Size(m)
}
func (m *OfferPayment) XXX_DiscardUnknown() {
	xxx_messageInfo_OfferPayment.DiscardUnknown(m)
}

var xxx_messageInfo_OfferPayment proto.InternalMessageInfo

func (m *OfferPayment) GetMicros() int64 {
	if m != nil && m.Micros != nil {
		return *m.Micros
	}
	return 0
}

func (m *OfferPayment) GetCurrencyCode() string {
	if m != nil && m.CurrencyCode != nil {
		return *m.CurrencyCode
	}
	return ""
}

func (m *OfferPayment) GetOfferPaymentPeriod() *OfferPaymentPeriod {
	if m != nil {
		return m.OfferPaymentPeriod
	}
	return nil
}

func (m *OfferPayment) GetOfferPaymentOverride() []*OfferPaymentOverride {
	if m != nil {
		return m.OfferPaymentOverride
	}
	return nil
}

type OfferPaymentPeriod struct {
	Duration             *TimePeriod  `protobuf:"bytes,1,opt,name=duration" json:"duration,omitempty"`
	Start                *MonthAndDay `protobuf:"bytes,2,opt,name=start" json:"start,omitempty"`
	End                  *MonthAndDay `protobuf:"bytes,3,opt,name=end" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *OfferPaymentPeriod) Reset()         { *m = OfferPaymentPeriod{} }
func (m *OfferPaymentPeriod) String() string { return proto.CompactTextString(m) }
func (*OfferPaymentPeriod) ProtoMessage()    {}
func (*OfferPaymentPeriod) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{8}
}

func (m *OfferPaymentPeriod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfferPaymentPeriod.Unmarshal(m, b)
}
func (m *OfferPaymentPeriod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfferPaymentPeriod.Marshal(b, m, deterministic)
}
func (m *OfferPaymentPeriod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfferPaymentPeriod.Merge(m, src)
}
func (m *OfferPaymentPeriod) XXX_Size() int {
	return xxx_messageInfo_OfferPaymentPeriod.Size(m)
}
func (m *OfferPaymentPeriod) XXX_DiscardUnknown() {
	xxx_messageInfo_OfferPaymentPeriod.DiscardUnknown(m)
}

var xxx_messageInfo_OfferPaymentPeriod proto.InternalMessageInfo

func (m *OfferPaymentPeriod) GetDuration() *TimePeriod {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *OfferPaymentPeriod) GetStart() *MonthAndDay {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *OfferPaymentPeriod) GetEnd() *MonthAndDay {
	if m != nil {
		return m.End
	}
	return nil
}

type OfferPaymentOverride struct {
	Micros               *int64       `protobuf:"varint,1,opt,name=micros" json:"micros,omitempty"`
	Start                *MonthAndDay `protobuf:"bytes,2,opt,name=start" json:"start,omitempty"`
	End                  *MonthAndDay `protobuf:"bytes,3,opt,name=end" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *OfferPaymentOverride) Reset()         { *m = OfferPaymentOverride{} }
func (m *OfferPaymentOverride) String() string { return proto.CompactTextString(m) }
func (*OfferPaymentOverride) ProtoMessage()    {}
func (*OfferPaymentOverride) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{9}
}

func (m *OfferPaymentOverride) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfferPaymentOverride.Unmarshal(m, b)
}
func (m *OfferPaymentOverride) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfferPaymentOverride.Marshal(b, m, deterministic)
}
func (m *OfferPaymentOverride) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfferPaymentOverride.Merge(m, src)
}
func (m *OfferPaymentOverride) XXX_Size() int {
	return xxx_messageInfo_OfferPaymentOverride.Size(m)
}
func (m *OfferPaymentOverride) XXX_DiscardUnknown() {
	xxx_messageInfo_OfferPaymentOverride.DiscardUnknown(m)
}

var xxx_messageInfo_OfferPaymentOverride proto.InternalMessageInfo

func (m *OfferPaymentOverride) GetMicros() int64 {
	if m != nil && m.Micros != nil {
		return *m.Micros
	}
	return 0
}

func (m *OfferPaymentOverride) GetStart() *MonthAndDay {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *OfferPaymentOverride) GetEnd() *MonthAndDay {
	if m != nil {
		return m.End
	}
	return nil
}

type SeasonalSubscriptionInfo struct {
	PeriodStart                *MonthAndDay                      `protobuf:"bytes,1,opt,name=periodStart" json:"periodStart,omitempty"`
	PeriodEnd                  *MonthAndDay                      `protobuf:"bytes,2,opt,name=periodEnd" json:"periodEnd,omitempty"`
	Prorated                   *bool                             `protobuf:"varint,4,opt,name=prorated" json:"prorated,omitempty"`
	PostTrialConversionPayment *SeasonalSubscriptionInfo_Payment `protobuf:"bytes,5,opt,name=postTrialConversionPayment" json:"postTrialConversionPayment,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                          `json:"-"`
	XXX_unrecognized           []byte                            `json:"-"`
	XXX_sizecache              int32                             `json:"-"`
}

func (m *SeasonalSubscriptionInfo) Reset()         { *m = SeasonalSubscriptionInfo{} }
func (m *SeasonalSubscriptionInfo) String() string { return proto.CompactTextString(m) }
func (*SeasonalSubscriptionInfo) ProtoMessage()    {}
func (*SeasonalSubscriptionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{10}
}

func (m *SeasonalSubscriptionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeasonalSubscriptionInfo.Unmarshal(m, b)
}
func (m *SeasonalSubscriptionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeasonalSubscriptionInfo.Marshal(b, m, deterministic)
}
func (m *SeasonalSubscriptionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeasonalSubscriptionInfo.Merge(m, src)
}
func (m *SeasonalSubscriptionInfo) XXX_Size() int {
	return xxx_messageInfo_SeasonalSubscriptionInfo.Size(m)
}
func (m *SeasonalSubscriptionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SeasonalSubscriptionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SeasonalSubscriptionInfo proto.InternalMessageInfo

func (m *SeasonalSubscriptionInfo) GetPeriodStart() *MonthAndDay {
	if m != nil {
		return m.PeriodStart
	}
	return nil
}

func (m *SeasonalSubscriptionInfo) GetPeriodEnd() *MonthAndDay {
	if m != nil {
		return m.PeriodEnd
	}
	return nil
}

func (m *SeasonalSubscriptionInfo) GetProrated() bool {
	if m != nil && m.Prorated != nil {
		return *m.Prorated
	}
	return false
}

func (m *SeasonalSubscriptionInfo) GetPostTrialConversionPayment() *SeasonalSubscriptionInfo_Payment {
	if m != nil {
		return m.PostTrialConversionPayment
	}
	return nil
}

type SeasonalSubscriptionInfo_Payment struct {
	Micros               *int64      `protobuf:"varint,1,opt,name=micros" json:"micros,omitempty"`
	CurrencyCode         *string     `protobuf:"bytes,2,opt,name=currencyCode" json:"currencyCode,omitempty"`
	FormattedAmount      *string     `protobuf:"bytes,3,opt,name=formattedAmount" json:"formattedAmount,omitempty"`
	Period               *TimePeriod `protobuf:"bytes,4,opt,name=period" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SeasonalSubscriptionInfo_Payment) Reset()         { *m = SeasonalSubscriptionInfo_Payment{} }
func (m *SeasonalSubscriptionInfo_Payment) String() string { return proto.CompactTextString(m) }
func (*SeasonalSubscriptionInfo_Payment) ProtoMessage()    {}
func (*SeasonalSubscriptionInfo_Payment) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{10, 0}
}

func (m *SeasonalSubscriptionInfo_Payment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeasonalSubscriptionInfo_Payment.Unmarshal(m, b)
}
func (m *SeasonalSubscriptionInfo_Payment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeasonalSubscriptionInfo_Payment.Marshal(b, m, deterministic)
}
func (m *SeasonalSubscriptionInfo_Payment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeasonalSubscriptionInfo_Payment.Merge(m, src)
}
func (m *SeasonalSubscriptionInfo_Payment) XXX_Size() int {
	return xxx_messageInfo_SeasonalSubscriptionInfo_Payment.Size(m)
}
func (m *SeasonalSubscriptionInfo_Payment) XXX_DiscardUnknown() {
	xxx_messageInfo_SeasonalSubscriptionInfo_Payment.DiscardUnknown(m)
}

var xxx_messageInfo_SeasonalSubscriptionInfo_Payment proto.InternalMessageInfo

func (m *SeasonalSubscriptionInfo_Payment) GetMicros() int64 {
	if m != nil && m.Micros != nil {
		return *m.Micros
	}
	return 0
}

func (m *SeasonalSubscriptionInfo_Payment) GetCurrencyCode() string {
	if m != nil && m.CurrencyCode != nil {
		return *m.CurrencyCode
	}
	return ""
}

func (m *SeasonalSubscriptionInfo_Payment) GetFormattedAmount() string {
	if m != nil && m.FormattedAmount != nil {
		return *m.FormattedAmount
	}
	return ""
}

func (m *SeasonalSubscriptionInfo_Payment) GetPeriod() *TimePeriod {
	if m != nil {
		return m.Period
	}
	return nil
}

type SubscriptionTerms struct {
	RecurringPeriod                    *TimePeriod                                `protobuf:"bytes,1,opt,name=recurringPeriod" json:"recurringPeriod,omitempty"`
	TrialPeriod                        *TimePeriod                                `protobuf:"bytes,2,opt,name=trialPeriod" json:"trialPeriod,omitempty"`
	FormattedPriceWithRecurrencePeriod *string                                    `protobuf:"bytes,3,opt,name=formattedPriceWithRecurrencePeriod" json:"formattedPriceWithRecurrencePeriod,omitempty"`
	SeasonalSubscriptionInfo           *SeasonalSubscriptionInfo                  `protobuf:"bytes,4,opt,name=seasonalSubscriptionInfo" json:"seasonalSubscriptionInfo,omitempty"`
	ReplaceDocid                       []*Docid                                   `protobuf:"bytes,5,rep,name=replaceDocid" json:"replaceDocid,omitempty"`
	GracePeriod                        *TimePeriod                                `protobuf:"bytes,6,opt,name=gracePeriod" json:"gracePeriod,omitempty"`
	Resignup                           *bool                                      `protobuf:"varint,7,opt,name=resignup" json:"resignup,omitempty"`
	InitialValidUntilTimestampMsec     *int64                                     `protobuf:"varint,8,opt,name=initialValidUntilTimestampMsec" json:"initialValidUntilTimestampMsec,omitempty"`
	NextPaymentCurrencyCode            *string                                    `protobuf:"bytes,9,opt,name=nextPaymentCurrencyCode" json:"nextPaymentCurrencyCode,omitempty"`
	NextPaymentPriceMicros             *int64                                     `protobuf:"varint,10,opt,name=nextPaymentPriceMicros" json:"nextPaymentPriceMicros,omitempty"`
	EnableAppSpecifiedTrialPeriod      *bool                                      `protobuf:"varint,11,opt,name=enableAppSpecifiedTrialPeriod" json:"enableAppSpecifiedTrialPeriod,omitempty"`
	SubscriptionReplacement            *SubscriptionTerms_SubscriptionReplacement `protobuf:"bytes,12,opt,name=subscriptionReplacement" json:"subscriptionReplacement,omitempty"`
	XXX_NoUnkeyedLiteral               struct{}                                   `json:"-"`
	XXX_unrecognized                   []byte                                     `json:"-"`
	XXX_sizecache                      int32                                      `json:"-"`
}

func (m *SubscriptionTerms) Reset()         { *m = SubscriptionTerms{} }
func (m *SubscriptionTerms) String() string { return proto.CompactTextString(m) }
func (*SubscriptionTerms) ProtoMessage()    {}
func (*SubscriptionTerms) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{11}
}

func (m *SubscriptionTerms) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionTerms.Unmarshal(m, b)
}
func (m *SubscriptionTerms) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionTerms.Marshal(b, m, deterministic)
}
func (m *SubscriptionTerms) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionTerms.Merge(m, src)
}
func (m *SubscriptionTerms) XXX_Size() int {
	return xxx_messageInfo_SubscriptionTerms.Size(m)
}
func (m *SubscriptionTerms) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionTerms.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionTerms proto.InternalMessageInfo

func (m *SubscriptionTerms) GetRecurringPeriod() *TimePeriod {
	if m != nil {
		return m.RecurringPeriod
	}
	return nil
}

func (m *SubscriptionTerms) GetTrialPeriod() *TimePeriod {
	if m != nil {
		return m.TrialPeriod
	}
	return nil
}

func (m *SubscriptionTerms) GetFormattedPriceWithRecurrencePeriod() string {
	if m != nil && m.FormattedPriceWithRecurrencePeriod != nil {
		return *m.FormattedPriceWithRecurrencePeriod
	}
	return ""
}

func (m *SubscriptionTerms) GetSeasonalSubscriptionInfo() *SeasonalSubscriptionInfo {
	if m != nil {
		return m.SeasonalSubscriptionInfo
	}
	return nil
}

func (m *SubscriptionTerms) GetReplaceDocid() []*Docid {
	if m != nil {
		return m.ReplaceDocid
	}
	return nil
}

func (m *SubscriptionTerms) GetGracePeriod() *TimePeriod {
	if m != nil {
		return m.GracePeriod
	}
	return nil
}

func (m *SubscriptionTerms) GetResignup() bool {
	if m != nil && m.Resignup != nil {
		return *m.Resignup
	}
	return false
}

func (m *SubscriptionTerms) GetInitialValidUntilTimestampMsec() int64 {
	if m != nil && m.InitialValidUntilTimestampMsec != nil {
		return *m.InitialValidUntilTimestampMsec
	}
	return 0
}

func (m *SubscriptionTerms) GetNextPaymentCurrencyCode() string {
	if m != nil && m.NextPaymentCurrencyCode != nil {
		return *m.NextPaymentCurrencyCode
	}
	return ""
}

func (m *SubscriptionTerms) GetNextPaymentPriceMicros() int64 {
	if m != nil && m.NextPaymentPriceMicros != nil {
		return *m.NextPaymentPriceMicros
	}
	return 0
}

func (m *SubscriptionTerms) GetEnableAppSpecifiedTrialPeriod() bool {
	if m != nil && m.EnableAppSpecifiedTrialPeriod != nil {
		return *m.EnableAppSpecifiedTrialPeriod
	}
	return false
}

func (m *SubscriptionTerms) GetSubscriptionReplacement() *SubscriptionTerms_SubscriptionReplacement {
	if m != nil {
		return m.SubscriptionReplacement
	}
	return nil
}

type SubscriptionTerms_SubscriptionReplacement struct {
	NewDocid                 *Docid   `protobuf:"bytes,1,opt,name=newDocid" json:"newDocid,omitempty"`
	OldDocid                 []*Docid `protobuf:"bytes,2,rep,name=oldDocid" json:"oldDocid,omitempty"`
	KeepNextRecurrenceTime   *bool    `protobuf:"varint,3,opt,name=keepNextRecurrenceTime" json:"keepNextRecurrenceTime,omitempty"`
	ReplaceOnFirstRecurrence *bool    `protobuf:"varint,4,opt,name=replaceOnFirstRecurrence" json:"replaceOnFirstRecurrence,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *SubscriptionTerms_SubscriptionReplacement) Reset() {
	*m = SubscriptionTerms_SubscriptionReplacement{}
}
func (m *SubscriptionTerms_SubscriptionReplacement) String() string { return proto.CompactTextString(m) }
func (*SubscriptionTerms_SubscriptionReplacement) ProtoMessage()    {}
func (*SubscriptionTerms_SubscriptionReplacement) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{11, 0}
}

func (m *SubscriptionTerms_SubscriptionReplacement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionTerms_SubscriptionReplacement.Unmarshal(m, b)
}
func (m *SubscriptionTerms_SubscriptionReplacement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionTerms_SubscriptionReplacement.Marshal(b, m, deterministic)
}
func (m *SubscriptionTerms_SubscriptionReplacement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionTerms_SubscriptionReplacement.Merge(m, src)
}
func (m *SubscriptionTerms_SubscriptionReplacement) XXX_Size() int {
	return xxx_messageInfo_SubscriptionTerms_SubscriptionReplacement.Size(m)
}
func (m *SubscriptionTerms_SubscriptionReplacement) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionTerms_SubscriptionReplacement.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionTerms_SubscriptionReplacement proto.InternalMessageInfo

func (m *SubscriptionTerms_SubscriptionReplacement) GetNewDocid() *Docid {
	if m != nil {
		return m.NewDocid
	}
	return nil
}

func (m *SubscriptionTerms_SubscriptionReplacement) GetOldDocid() []*Docid {
	if m != nil {
		return m.OldDocid
	}
	return nil
}

func (m *SubscriptionTerms_SubscriptionReplacement) GetKeepNextRecurrenceTime() bool {
	if m != nil && m.KeepNextRecurrenceTime != nil {
		return *m.KeepNextRecurrenceTime
	}
	return false
}

func (m *SubscriptionTerms_SubscriptionReplacement) GetReplaceOnFirstRecurrence() bool {
	if m != nil && m.ReplaceOnFirstRecurrence != nil {
		return *m.ReplaceOnFirstRecurrence
	}
	return false
}

type SubscriptionContentTerms struct {
	RequiredSubscription *Docid   `protobuf:"bytes,1,opt,name=requiredSubscription" json:"requiredSubscription,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscriptionContentTerms) Reset()         { *m = SubscriptionContentTerms{} }
func (m *SubscriptionContentTerms) String() string { return proto.CompactTextString(m) }
func (*SubscriptionContentTerms) ProtoMessage()    {}
func (*SubscriptionContentTerms) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{12}
}

func (m *SubscriptionContentTerms) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionContentTerms.Unmarshal(m, b)
}
func (m *SubscriptionContentTerms) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionContentTerms.Marshal(b, m, deterministic)
}
func (m *SubscriptionContentTerms) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionContentTerms.Merge(m, src)
}
func (m *SubscriptionContentTerms) XXX_Size() int {
	return xxx_messageInfo_SubscriptionContentTerms.Size(m)
}
func (m *SubscriptionContentTerms) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionContentTerms.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionContentTerms proto.InternalMessageInfo

func (m *SubscriptionContentTerms) GetRequiredSubscription() *Docid {
	if m != nil {
		return m.RequiredSubscription
	}
	return nil
}

type GroupLicenseKey struct {
	DasherCustomerId     *uint64  `protobuf:"fixed64,1,opt,name=dasherCustomerId" json:"dasherCustomerId,omitempty"`
	Docid                *Docid   `protobuf:"bytes,2,opt,name=docid" json:"docid,omitempty"`
	LicensedOfferType    *int32   `protobuf:"varint,3,opt,name=licensedOfferType" json:"licensedOfferType,omitempty"`
	Type                 *int32   `protobuf:"varint,4,opt,name=type" json:"type,omitempty"`
	RentalPeriodDays     *int32   `protobuf:"varint,5,opt,name=rentalPeriodDays" json:"rentalPeriodDays,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupLicenseKey) Reset()         { *m = GroupLicenseKey{} }
func (m *GroupLicenseKey) String() string { return proto.CompactTextString(m) }
func (*GroupLicenseKey) ProtoMessage()    {}
func (*GroupLicenseKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{13}
}

func (m *GroupLicenseKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupLicenseKey.Unmarshal(m, b)
}
func (m *GroupLicenseKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupLicenseKey.Marshal(b, m, deterministic)
}
func (m *GroupLicenseKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupLicenseKey.Merge(m, src)
}
func (m *GroupLicenseKey) XXX_Size() int {
	return xxx_messageInfo_GroupLicenseKey.Size(m)
}
func (m *GroupLicenseKey) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupLicenseKey.DiscardUnknown(m)
}

var xxx_messageInfo_GroupLicenseKey proto.InternalMessageInfo

func (m *GroupLicenseKey) GetDasherCustomerId() uint64 {
	if m != nil && m.DasherCustomerId != nil {
		return *m.DasherCustomerId
	}
	return 0
}

func (m *GroupLicenseKey) GetDocid() *Docid {
	if m != nil {
		return m.Docid
	}
	return nil
}

func (m *GroupLicenseKey) GetLicensedOfferType() int32 {
	if m != nil && m.LicensedOfferType != nil {
		return *m.LicensedOfferType
	}
	return 0
}

func (m *GroupLicenseKey) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *GroupLicenseKey) GetRentalPeriodDays() int32 {
	if m != nil && m.RentalPeriodDays != nil {
		return *m.RentalPeriodDays
	}
	return 0
}

type GroupLicenseInfo struct {
	LicensedOfferType    *int32           `protobuf:"varint,1,opt,name=licensedOfferType" json:"licensedOfferType,omitempty"`
	GaiaGroupId          *uint64          `protobuf:"fixed64,2,opt,name=gaiaGroupId" json:"gaiaGroupId,omitempty"`
	GroupLicenseKey      *GroupLicenseKey `protobuf:"bytes,3,opt,name=groupLicenseKey" json:"groupLicenseKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GroupLicenseInfo) Reset()         { *m = GroupLicenseInfo{} }
func (m *GroupLicenseInfo) String() string { return proto.CompactTextString(m) }
func (*GroupLicenseInfo) ProtoMessage()    {}
func (*GroupLicenseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{14}
}

func (m *GroupLicenseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupLicenseInfo.Unmarshal(m, b)
}
func (m *GroupLicenseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupLicenseInfo.Marshal(b, m, deterministic)
}
func (m *GroupLicenseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupLicenseInfo.Merge(m, src)
}
func (m *GroupLicenseInfo) XXX_Size() int {
	return xxx_messageInfo_GroupLicenseInfo.Size(m)
}
func (m *GroupLicenseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupLicenseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GroupLicenseInfo proto.InternalMessageInfo

func (m *GroupLicenseInfo) GetLicensedOfferType() int32 {
	if m != nil && m.LicensedOfferType != nil {
		return *m.LicensedOfferType
	}
	return 0
}

func (m *GroupLicenseInfo) GetGaiaGroupId() uint64 {
	if m != nil && m.GaiaGroupId != nil {
		return *m.GaiaGroupId
	}
	return 0
}

func (m *GroupLicenseInfo) GetGroupLicenseKey() *GroupLicenseKey {
	if m != nil {
		return m.GroupLicenseKey
	}
	return nil
}

type LicenseTerms struct {
	GroupLicenseKey      *GroupLicenseKey `protobuf:"bytes,1,opt,name=groupLicenseKey" json:"groupLicenseKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *LicenseTerms) Reset()         { *m = LicenseTerms{} }
func (m *LicenseTerms) String() string { return proto.CompactTextString(m) }
func (*LicenseTerms) ProtoMessage()    {}
func (*LicenseTerms) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{15}
}

func (m *LicenseTerms) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LicenseTerms.Unmarshal(m, b)
}
func (m *LicenseTerms) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LicenseTerms.Marshal(b, m, deterministic)
}
func (m *LicenseTerms) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LicenseTerms.Merge(m, src)
}
func (m *LicenseTerms) XXX_Size() int {
	return xxx_messageInfo_LicenseTerms.Size(m)
}
func (m *LicenseTerms) XXX_DiscardUnknown() {
	xxx_messageInfo_LicenseTerms.DiscardUnknown(m)
}

var xxx_messageInfo_LicenseTerms proto.InternalMessageInfo

func (m *LicenseTerms) GetGroupLicenseKey() *GroupLicenseKey {
	if m != nil {
		return m.GroupLicenseKey
	}
	return nil
}

type LicensedDocumentInfo struct {
	GaiaGroupId                 []uint64         `protobuf:"fixed64,1,rep,name=gaiaGroupId" json:"gaiaGroupId,omitempty"`
	GroupLicenseCheckoutOrderId *string          `protobuf:"bytes,2,opt,name=groupLicenseCheckoutOrderId" json:"groupLicenseCheckoutOrderId,omitempty"`
	GroupLicenseKey             *GroupLicenseKey `protobuf:"bytes,3,opt,name=groupLicenseKey" json:"groupLicenseKey,omitempty"`
	AssignedByGaiaId            *uint64          `protobuf:"fixed64,4,opt,name=assignedByGaiaId" json:"assignedByGaiaId,omitempty"`
	DEPRECATEDAssignmentId      *string          `protobuf:"bytes,5,opt,name=DEPRECATEDAssignmentId" json:"DEPRECATEDAssignmentId,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}         `json:"-"`
	XXX_unrecognized            []byte           `json:"-"`
	XXX_sizecache               int32            `json:"-"`
}

func (m *LicensedDocumentInfo) Reset()         { *m = LicensedDocumentInfo{} }
func (m *LicensedDocumentInfo) String() string { return proto.CompactTextString(m) }
func (*LicensedDocumentInfo) ProtoMessage()    {}
func (*LicensedDocumentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{16}
}

func (m *LicensedDocumentInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LicensedDocumentInfo.Unmarshal(m, b)
}
func (m *LicensedDocumentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LicensedDocumentInfo.Marshal(b, m, deterministic)
}
func (m *LicensedDocumentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LicensedDocumentInfo.Merge(m, src)
}
func (m *LicensedDocumentInfo) XXX_Size() int {
	return xxx_messageInfo_LicensedDocumentInfo.Size(m)
}
func (m *LicensedDocumentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LicensedDocumentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LicensedDocumentInfo proto.InternalMessageInfo

func (m *LicensedDocumentInfo) GetGaiaGroupId() []uint64 {
	if m != nil {
		return m.GaiaGroupId
	}
	return nil
}

func (m *LicensedDocumentInfo) GetGroupLicenseCheckoutOrderId() string {
	if m != nil && m.GroupLicenseCheckoutOrderId != nil {
		return *m.GroupLicenseCheckoutOrderId
	}
	return ""
}

func (m *LicensedDocumentInfo) GetGroupLicenseKey() *GroupLicenseKey {
	if m != nil {
		return m.GroupLicenseKey
	}
	return nil
}

func (m *LicensedDocumentInfo) GetAssignedByGaiaId() uint64 {
	if m != nil && m.AssignedByGaiaId != nil {
		return *m.AssignedByGaiaId
	}
	return 0
}

func (m *LicensedDocumentInfo) GetDEPRECATEDAssignmentId() string {
	if m != nil && m.DEPRECATEDAssignmentId != nil {
		return *m.DEPRECATEDAssignmentId
	}
	return ""
}

type RedemptionRecordKey struct {
	PublisherId          *int64   `protobuf:"varint,1,opt,name=publisherId" json:"publisherId,omitempty"`
	CampaignId           *int64   `protobuf:"varint,2,opt,name=campaignId" json:"campaignId,omitempty"`
	CodeGroupId          *int64   `protobuf:"varint,3,opt,name=codeGroupId" json:"codeGroupId,omitempty"`
	RecordId             *int64   `protobuf:"varint,4,opt,name=recordId" json:"recordId,omitempty"`
	Type                 *int32   `protobuf:"varint,5,opt,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedemptionRecordKey) Reset()         { *m = RedemptionRecordKey{} }
func (m *RedemptionRecordKey) String() string { return proto.CompactTextString(m) }
func (*RedemptionRecordKey) ProtoMessage()    {}
func (*RedemptionRecordKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{17}
}

func (m *RedemptionRecordKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedemptionRecordKey.Unmarshal(m, b)
}
func (m *RedemptionRecordKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedemptionRecordKey.Marshal(b, m, deterministic)
}
func (m *RedemptionRecordKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedemptionRecordKey.Merge(m, src)
}
func (m *RedemptionRecordKey) XXX_Size() int {
	return xxx_messageInfo_RedemptionRecordKey.Size(m)
}
func (m *RedemptionRecordKey) XXX_DiscardUnknown() {
	xxx_messageInfo_RedemptionRecordKey.DiscardUnknown(m)
}

var xxx_messageInfo_RedemptionRecordKey proto.InternalMessageInfo

func (m *RedemptionRecordKey) GetPublisherId() int64 {
	if m != nil && m.PublisherId != nil {
		return *m.PublisherId
	}
	return 0
}

func (m *RedemptionRecordKey) GetCampaignId() int64 {
	if m != nil && m.CampaignId != nil {
		return *m.CampaignId
	}
	return 0
}

func (m *RedemptionRecordKey) GetCodeGroupId() int64 {
	if m != nil && m.CodeGroupId != nil {
		return *m.CodeGroupId
	}
	return 0
}

func (m *RedemptionRecordKey) GetRecordId() int64 {
	if m != nil && m.RecordId != nil {
		return *m.RecordId
	}
	return 0
}

func (m *RedemptionRecordKey) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

type VoucherId struct {
	VoucherDocid         *Docid               `protobuf:"bytes,1,opt,name=voucherDocid" json:"voucherDocid,omitempty"`
	Key                  *RedemptionRecordKey `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *VoucherId) Reset()         { *m = VoucherId{} }
func (m *VoucherId) String() string { return proto.CompactTextString(m) }
func (*VoucherId) ProtoMessage()    {}
func (*VoucherId) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{18}
}

func (m *VoucherId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoucherId.Unmarshal(m, b)
}
func (m *VoucherId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoucherId.Marshal(b, m, deterministic)
}
func (m *VoucherId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoucherId.Merge(m, src)
}
func (m *VoucherId) XXX_Size() int {
	return xxx_messageInfo_VoucherId.Size(m)
}
func (m *VoucherId) XXX_DiscardUnknown() {
	xxx_messageInfo_VoucherId.DiscardUnknown(m)
}

var xxx_messageInfo_VoucherId proto.InternalMessageInfo

func (m *VoucherId) GetVoucherDocid() *Docid {
	if m != nil {
		return m.VoucherDocid
	}
	return nil
}

func (m *VoucherId) GetKey() *RedemptionRecordKey {
	if m != nil {
		return m.Key
	}
	return nil
}

type VoucherOfferTerms struct {
	VoucherDocid           []*Docid `protobuf:"bytes,1,rep,name=voucherDocid" json:"voucherDocid,omitempty"`
	VoucherPriceMicros     *int64   `protobuf:"varint,2,opt,name=voucherPriceMicros" json:"voucherPriceMicros,omitempty"`
	VoucherFormattedAmount *string  `protobuf:"bytes,3,opt,name=voucherFormattedAmount" json:"voucherFormattedAmount,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *VoucherOfferTerms) Reset()         { *m = VoucherOfferTerms{} }
func (m *VoucherOfferTerms) String() string { return proto.CompactTextString(m) }
func (*VoucherOfferTerms) ProtoMessage()    {}
func (*VoucherOfferTerms) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{19}
}

func (m *VoucherOfferTerms) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoucherOfferTerms.Unmarshal(m, b)
}
func (m *VoucherOfferTerms) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoucherOfferTerms.Marshal(b, m, deterministic)
}
func (m *VoucherOfferTerms) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoucherOfferTerms.Merge(m, src)
}
func (m *VoucherOfferTerms) XXX_Size() int {
	return xxx_messageInfo_VoucherOfferTerms.Size(m)
}
func (m *VoucherOfferTerms) XXX_DiscardUnknown() {
	xxx_messageInfo_VoucherOfferTerms.DiscardUnknown(m)
}

var xxx_messageInfo_VoucherOfferTerms proto.InternalMessageInfo

func (m *VoucherOfferTerms) GetVoucherDocid() []*Docid {
	if m != nil {
		return m.VoucherDocid
	}
	return nil
}

func (m *VoucherOfferTerms) GetVoucherPriceMicros() int64 {
	if m != nil && m.VoucherPriceMicros != nil {
		return *m.VoucherPriceMicros
	}
	return 0
}

func (m *VoucherOfferTerms) GetVoucherFormattedAmount() string {
	if m != nil && m.VoucherFormattedAmount != nil {
		return *m.VoucherFormattedAmount
	}
	return ""
}

type LibraryVoucher struct {
	VoucherId            *VoucherId `protobuf:"bytes,1,opt,name=voucherId" json:"voucherId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *LibraryVoucher) Reset()         { *m = LibraryVoucher{} }
func (m *LibraryVoucher) String() string { return proto.CompactTextString(m) }
func (*LibraryVoucher) ProtoMessage()    {}
func (*LibraryVoucher) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{20}
}

func (m *LibraryVoucher) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LibraryVoucher.Unmarshal(m, b)
}
func (m *LibraryVoucher) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LibraryVoucher.Marshal(b, m, deterministic)
}
func (m *LibraryVoucher) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LibraryVoucher.Merge(m, src)
}
func (m *LibraryVoucher) XXX_Size() int {
	return xxx_messageInfo_LibraryVoucher.Size(m)
}
func (m *LibraryVoucher) XXX_DiscardUnknown() {
	xxx_messageInfo_LibraryVoucher.DiscardUnknown(m)
}

var xxx_messageInfo_LibraryVoucher proto.InternalMessageInfo

func (m *LibraryVoucher) GetVoucherId() *VoucherId {
	if m != nil {
		return m.VoucherId
	}
	return nil
}

type OwnershipInfo struct {
	InitiationTimestampMsec        *int64                `protobuf:"varint,1,opt,name=initiationTimestampMsec" json:"initiationTimestampMsec,omitempty"`
	ValidUntilTimestampMsec        *int64                `protobuf:"varint,2,opt,name=validUntilTimestampMsec" json:"validUntilTimestampMsec,omitempty"`
	AutoRenewing                   *bool                 `protobuf:"varint,3,opt,name=autoRenewing" json:"autoRenewing,omitempty"`
	RefundTimeoutTimestampMsec     *int64                `protobuf:"varint,4,opt,name=refundTimeoutTimestampMsec" json:"refundTimeoutTimestampMsec,omitempty"`
	PostDeliveryRefundWindowMsec   *int64                `protobuf:"varint,5,opt,name=postDeliveryRefundWindowMsec" json:"postDeliveryRefundWindowMsec,omitempty"`
	DeveloperPurchaseInfo          *SignedData           `protobuf:"bytes,6,opt,name=developerPurchaseInfo" json:"developerPurchaseInfo,omitempty"`
	Preordered                     *bool                 `protobuf:"varint,7,opt,name=preordered" json:"preordered,omitempty"`
	Hidden                         *bool                 `protobuf:"varint,8,opt,name=hidden" json:"hidden,omitempty"`
	RentalTerms                    *RentalTerms          `protobuf:"bytes,9,opt,name=rentalTerms" json:"rentalTerms,omitempty"`
	GroupLicenseInfo               *GroupLicenseInfo     `protobuf:"bytes,10,opt,name=groupLicenseInfo" json:"groupLicenseInfo,omitempty"`
	LicensedDocumentInfo           *LicensedDocumentInfo `protobuf:"bytes,11,opt,name=licensedDocumentInfo" json:"licensedDocumentInfo,omitempty"`
	Quantity                       *int32                `protobuf:"varint,12,opt,name=quantity" json:"quantity,omitempty"`
	LibraryExpirationTimestampMsec *int64                `protobuf:"varint,14,opt,name=libraryExpirationTimestampMsec" json:"libraryExpirationTimestampMsec,omitempty"`
	LibraryVoucher                 *LibraryVoucher       `protobuf:"bytes,15,opt,name=libraryVoucher" json:"libraryVoucher,omitempty"`
	BundleDocid                    *Docid                `protobuf:"bytes,16,opt,name=bundleDocid" json:"bundleDocid,omitempty"`
	Bonus                          *bool                 `protobuf:"varint,17,opt,name=bonus" json:"bonus,omitempty"`
	StoredValidUntilTimestampMsec  *int64                `protobuf:"varint,18,opt,name=storedValidUntilTimestampMsec" json:"storedValidUntilTimestampMsec,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}              `json:"-"`
	XXX_unrecognized               []byte                `json:"-"`
	XXX_sizecache                  int32                 `json:"-"`
}

func (m *OwnershipInfo) Reset()         { *m = OwnershipInfo{} }
func (m *OwnershipInfo) String() string { return proto.CompactTextString(m) }
func (*OwnershipInfo) ProtoMessage()    {}
func (*OwnershipInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{21}
}

func (m *OwnershipInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OwnershipInfo.Unmarshal(m, b)
}
func (m *OwnershipInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OwnershipInfo.Marshal(b, m, deterministic)
}
func (m *OwnershipInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OwnershipInfo.Merge(m, src)
}
func (m *OwnershipInfo) XXX_Size() int {
	return xxx_messageInfo_OwnershipInfo.Size(m)
}
func (m *OwnershipInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OwnershipInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OwnershipInfo proto.InternalMessageInfo

func (m *OwnershipInfo) GetInitiationTimestampMsec() int64 {
	if m != nil && m.InitiationTimestampMsec != nil {
		return *m.InitiationTimestampMsec
	}
	return 0
}

func (m *OwnershipInfo) GetValidUntilTimestampMsec() int64 {
	if m != nil && m.ValidUntilTimestampMsec != nil {
		return *m.ValidUntilTimestampMsec
	}
	return 0
}

func (m *OwnershipInfo) GetAutoRenewing() bool {
	if m != nil && m.AutoRenewing != nil {
		return *m.AutoRenewing
	}
	return false
}

func (m *OwnershipInfo) GetRefundTimeoutTimestampMsec() int64 {
	if m != nil && m.RefundTimeoutTimestampMsec != nil {
		return *m.RefundTimeoutTimestampMsec
	}
	return 0
}

func (m *OwnershipInfo) GetPostDeliveryRefundWindowMsec() int64 {
	if m != nil && m.PostDeliveryRefundWindowMsec != nil {
		return *m.PostDeliveryRefundWindowMsec
	}
	return 0
}

func (m *OwnershipInfo) GetDeveloperPurchaseInfo() *SignedData {
	if m != nil {
		return m.DeveloperPurchaseInfo
	}
	return nil
}

func (m *OwnershipInfo) GetPreordered() bool {
	if m != nil && m.Preordered != nil {
		return *m.Preordered
	}
	return false
}

func (m *OwnershipInfo) GetHidden() bool {
	if m != nil && m.Hidden != nil {
		return *m.Hidden
	}
	return false
}

func (m *OwnershipInfo) GetRentalTerms() *RentalTerms {
	if m != nil {
		return m.RentalTerms
	}
	return nil
}

func (m *OwnershipInfo) GetGroupLicenseInfo() *GroupLicenseInfo {
	if m != nil {
		return m.GroupLicenseInfo
	}
	return nil
}

func (m *OwnershipInfo) GetLicensedDocumentInfo() *LicensedDocumentInfo {
	if m != nil {
		return m.LicensedDocumentInfo
	}
	return nil
}

func (m *OwnershipInfo) GetQuantity() int32 {
	if m != nil && m.Quantity != nil {
		return *m.Quantity
	}
	return 0
}

func (m *OwnershipInfo) GetLibraryExpirationTimestampMsec() int64 {
	if m != nil && m.LibraryExpirationTimestampMsec != nil {
		return *m.LibraryExpirationTimestampMsec
	}
	return 0
}

func (m *OwnershipInfo) GetLibraryVoucher() *LibraryVoucher {
	if m != nil {
		return m.LibraryVoucher
	}
	return nil
}

func (m *OwnershipInfo) GetBundleDocid() *Docid {
	if m != nil {
		return m.BundleDocid
	}
	return nil
}

func (m *OwnershipInfo) GetBonus() bool {
	if m != nil && m.Bonus != nil {
		return *m.Bonus
	}
	return false
}

func (m *OwnershipInfo) GetStoredValidUntilTimestampMsec() int64 {
	if m != nil && m.StoredValidUntilTimestampMsec != nil {
		return *m.StoredValidUntilTimestampMsec
	}
	return 0
}

type Image struct {
	ImageType                  *int32           `protobuf:"varint,1,opt,name=imageType" json:"imageType,omitempty"`
	Dimension                  *Image_Dimension `protobuf:"group,2,opt,name=Dimension,json=dimension" json:"dimension,omitempty"`
	ImageUrl                   *string          `protobuf:"bytes,5,opt,name=imageUrl" json:"imageUrl,omitempty"`
	AltTextLocalized           *string          `protobuf:"bytes,6,opt,name=altTextLocalized" json:"altTextLocalized,omitempty"`
	SecureUrl                  *string          `protobuf:"bytes,7,opt,name=secureUrl" json:"secureUrl,omitempty"`
	PositionInSequence         *int32           `protobuf:"varint,8,opt,name=positionInSequence" json:"positionInSequence,omitempty"`
	SupportsFifeUrlOptions     *bool            `protobuf:"varint,9,opt,name=supportsFifeUrlOptions" json:"supportsFifeUrlOptions,omitempty"`
	Citation                   *Image_Citation  `protobuf:"group,10,opt,name=Citation,json=citation" json:"citation,omitempty"`
	DurationSeconds            *int32           `protobuf:"varint,14,opt,name=durationSeconds" json:"durationSeconds,omitempty"`
	FillColorRgb               *string          `protobuf:"bytes,15,opt,name=fillColorRgb" json:"fillColorRgb,omitempty"`
	Autogen                    *bool            `protobuf:"varint,16,opt,name=autogen" json:"autogen,omitempty"`
	Attribution                *Attribution     `protobuf:"bytes,17,opt,name=attribution" json:"attribution,omitempty"`
	BackgroundColorRgb         *string          `protobuf:"bytes,19,opt,name=backgroundColorRgb" json:"backgroundColorRgb,omitempty"`
	Palette                    *ImagePalette    `protobuf:"bytes,20,opt,name=palette" json:"palette,omitempty"`
	DeviceClass                *int32           `protobuf:"varint,21,opt,name=deviceClass" json:"deviceClass,omitempty"`
	SupportsFifeMonogramOption *bool            `protobuf:"varint,22,opt,name=supportsFifeMonogramOption" json:"supportsFifeMonogramOption,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}         `json:"-"`
	XXX_unrecognized           []byte           `json:"-"`
	XXX_sizecache              int32            `json:"-"`
}

func (m *Image) Reset()         { *m = Image{} }
func (m *Image) String() string { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()    {}
func (*Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{22}
}

func (m *Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image.Unmarshal(m, b)
}
func (m *Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image.Marshal(b, m, deterministic)
}
func (m *Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image.Merge(m, src)
}
func (m *Image) XXX_Size() int {
	return xxx_messageInfo_Image.Size(m)
}
func (m *Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Image proto.InternalMessageInfo

func (m *Image) GetImageType() int32 {
	if m != nil && m.ImageType != nil {
		return *m.ImageType
	}
	return 0
}

func (m *Image) GetDimension() *Image_Dimension {
	if m != nil {
		return m.Dimension
	}
	return nil
}

func (m *Image) GetImageUrl() string {
	if m != nil && m.ImageUrl != nil {
		return *m.ImageUrl
	}
	return ""
}

func (m *Image) GetAltTextLocalized() string {
	if m != nil && m.AltTextLocalized != nil {
		return *m.AltTextLocalized
	}
	return ""
}

func (m *Image) GetSecureUrl() string {
	if m != nil && m.SecureUrl != nil {
		return *m.SecureUrl
	}
	return ""
}

func (m *Image) GetPositionInSequence() int32 {
	if m != nil && m.PositionInSequence != nil {
		return *m.PositionInSequence
	}
	return 0
}

func (m *Image) GetSupportsFifeUrlOptions() bool {
	if m != nil && m.SupportsFifeUrlOptions != nil {
		return *m.SupportsFifeUrlOptions
	}
	return false
}

func (m *Image) GetCitation() *Image_Citation {
	if m != nil {
		return m.Citation
	}
	return nil
}

func (m *Image) GetDurationSeconds() int32 {
	if m != nil && m.DurationSeconds != nil {
		return *m.DurationSeconds
	}
	return 0
}

func (m *Image) GetFillColorRgb() string {
	if m != nil && m.FillColorRgb != nil {
		return *m.FillColorRgb
	}
	return ""
}

func (m *Image) GetAutogen() bool {
	if m != nil && m.Autogen != nil {
		return *m.Autogen
	}
	return false
}

func (m *Image) GetAttribution() *Attribution {
	if m != nil {
		return m.Attribution
	}
	return nil
}

func (m *Image) GetBackgroundColorRgb() string {
	if m != nil && m.BackgroundColorRgb != nil {
		return *m.BackgroundColorRgb
	}
	return ""
}

func (m *Image) GetPalette() *ImagePalette {
	if m != nil {
		return m.Palette
	}
	return nil
}

func (m *Image) GetDeviceClass() int32 {
	if m != nil && m.DeviceClass != nil {
		return *m.DeviceClass
	}
	return 0
}

func (m *Image) GetSupportsFifeMonogramOption() bool {
	if m != nil && m.SupportsFifeMonogramOption != nil {
		return *m.SupportsFifeMonogramOption
	}
	return false
}

type Image_Dimension struct {
	Width                *int32   `protobuf:"varint,3,opt,name=width" json:"width,omitempty"`
	Height               *int32   `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
	AspectRatio          *int32   `protobuf:"varint,18,opt,name=aspectRatio" json:"aspectRatio,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Image_Dimension) Reset()         { *m = Image_Dimension{} }
func (m *Image_Dimension) String() string { return proto.CompactTextString(m) }
func (*Image_Dimension) ProtoMessage()    {}
func (*Image_Dimension) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{22, 0}
}

func (m *Image_Dimension) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image_Dimension.Unmarshal(m, b)
}
func (m *Image_Dimension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image_Dimension.Marshal(b, m, deterministic)
}
func (m *Image_Dimension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image_Dimension.Merge(m, src)
}
func (m *Image_Dimension) XXX_Size() int {
	return xxx_messageInfo_Image_Dimension.Size(m)
}
func (m *Image_Dimension) XXX_DiscardUnknown() {
	xxx_messageInfo_Image_Dimension.DiscardUnknown(m)
}

var xxx_messageInfo_Image_Dimension proto.InternalMessageInfo

func (m *Image_Dimension) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *Image_Dimension) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *Image_Dimension) GetAspectRatio() int32 {
	if m != nil && m.AspectRatio != nil {
		return *m.AspectRatio
	}
	return 0
}

type Image_Citation struct {
	TitleLocalized       *string  `protobuf:"bytes,11,opt,name=titleLocalized" json:"titleLocalized,omitempty"`
	Url                  *string  `protobuf:"bytes,12,opt,name=url" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Image_Citation) Reset()         { *m = Image_Citation{} }
func (m *Image_Citation) String() string { return proto.CompactTextString(m) }
func (*Image_Citation) ProtoMessage()    {}
func (*Image_Citation) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{22, 1}
}

func (m *Image_Citation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image_Citation.Unmarshal(m, b)
}
func (m *Image_Citation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image_Citation.Marshal(b, m, deterministic)
}
func (m *Image_Citation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image_Citation.Merge(m, src)
}
func (m *Image_Citation) XXX_Size() int {
	return xxx_messageInfo_Image_Citation.Size(m)
}
func (m *Image_Citation) XXX_DiscardUnknown() {
	xxx_messageInfo_Image_Citation.DiscardUnknown(m)
}

var xxx_messageInfo_Image_Citation proto.InternalMessageInfo

func (m *Image_Citation) GetTitleLocalized() string {
	if m != nil && m.TitleLocalized != nil {
		return *m.TitleLocalized
	}
	return ""
}

func (m *Image_Citation) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type ImagePalette struct {
	LightVibrantRgb      *string  `protobuf:"bytes,1,opt,name=lightVibrantRgb" json:"lightVibrantRgb,omitempty"`
	VibrantRgb           *string  `protobuf:"bytes,2,opt,name=vibrantRgb" json:"vibrantRgb,omitempty"`
	DarkVibrantRgb       *string  `protobuf:"bytes,3,opt,name=darkVibrantRgb" json:"darkVibrantRgb,omitempty"`
	LightMutedRgb        *string  `protobuf:"bytes,4,opt,name=lightMutedRgb" json:"lightMutedRgb,omitempty"`
	MutedRgb             *string  `protobuf:"bytes,5,opt,name=mutedRgb" json:"mutedRgb,omitempty"`
	DarkMutedRgb         *string  `protobuf:"bytes,6,opt,name=darkMutedRgb" json:"darkMutedRgb,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImagePalette) Reset()         { *m = ImagePalette{} }
func (m *ImagePalette) String() string { return proto.CompactTextString(m) }
func (*ImagePalette) ProtoMessage()    {}
func (*ImagePalette) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{23}
}

func (m *ImagePalette) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImagePalette.Unmarshal(m, b)
}
func (m *ImagePalette) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImagePalette.Marshal(b, m, deterministic)
}
func (m *ImagePalette) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImagePalette.Merge(m, src)
}
func (m *ImagePalette) XXX_Size() int {
	return xxx_messageInfo_ImagePalette.Size(m)
}
func (m *ImagePalette) XXX_DiscardUnknown() {
	xxx_messageInfo_ImagePalette.DiscardUnknown(m)
}

var xxx_messageInfo_ImagePalette proto.InternalMessageInfo

func (m *ImagePalette) GetLightVibrantRgb() string {
	if m != nil && m.LightVibrantRgb != nil {
		return *m.LightVibrantRgb
	}
	return ""
}

func (m *ImagePalette) GetVibrantRgb() string {
	if m != nil && m.VibrantRgb != nil {
		return *m.VibrantRgb
	}
	return ""
}

func (m *ImagePalette) GetDarkVibrantRgb() string {
	if m != nil && m.DarkVibrantRgb != nil {
		return *m.DarkVibrantRgb
	}
	return ""
}

func (m *ImagePalette) GetLightMutedRgb() string {
	if m != nil && m.LightMutedRgb != nil {
		return *m.LightMutedRgb
	}
	return ""
}

func (m *ImagePalette) GetMutedRgb() string {
	if m != nil && m.MutedRgb != nil {
		return *m.MutedRgb
	}
	return ""
}

func (m *ImagePalette) GetDarkMutedRgb() string {
	if m != nil && m.DarkMutedRgb != nil {
		return *m.DarkMutedRgb
	}
	return ""
}

type Attribution struct {
	SourceTitle          *string  `protobuf:"bytes,1,opt,name=sourceTitle" json:"sourceTitle,omitempty"`
	SourceUrl            *string  `protobuf:"bytes,2,opt,name=sourceUrl" json:"sourceUrl,omitempty"`
	LicenseTitle         *string  `protobuf:"bytes,3,opt,name=licenseTitle" json:"licenseTitle,omitempty"`
	LicenseUrl           *string  `protobuf:"bytes,4,opt,name=licenseUrl" json:"licenseUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Attribution) Reset()         { *m = Attribution{} }
func (m *Attribution) String() string { return proto.CompactTextString(m) }
func (*Attribution) ProtoMessage()    {}
func (*Attribution) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{24}
}

func (m *Attribution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attribution.Unmarshal(m, b)
}
func (m *Attribution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attribution.Marshal(b, m, deterministic)
}
func (m *Attribution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attribution.Merge(m, src)
}
func (m *Attribution) XXX_Size() int {
	return xxx_messageInfo_Attribution.Size(m)
}
func (m *Attribution) XXX_DiscardUnknown() {
	xxx_messageInfo_Attribution.DiscardUnknown(m)
}

var xxx_messageInfo_Attribution proto.InternalMessageInfo

func (m *Attribution) GetSourceTitle() string {
	if m != nil && m.SourceTitle != nil {
		return *m.SourceTitle
	}
	return ""
}

func (m *Attribution) GetSourceUrl() string {
	if m != nil && m.SourceUrl != nil {
		return *m.SourceUrl
	}
	return ""
}

func (m *Attribution) GetLicenseTitle() string {
	if m != nil && m.LicenseTitle != nil {
		return *m.LicenseTitle
	}
	return ""
}

func (m *Attribution) GetLicenseUrl() string {
	if m != nil && m.LicenseUrl != nil {
		return *m.LicenseUrl
	}
	return ""
}

type CertificateSet struct {
	CertificateHash      []string `protobuf:"bytes,1,rep,name=certificateHash" json:"certificateHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CertificateSet) Reset()         { *m = CertificateSet{} }
func (m *CertificateSet) String() string { return proto.CompactTextString(m) }
func (*CertificateSet) ProtoMessage()    {}
func (*CertificateSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{25}
}

func (m *CertificateSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertificateSet.Unmarshal(m, b)
}
func (m *CertificateSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertificateSet.Marshal(b, m, deterministic)
}
func (m *CertificateSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertificateSet.Merge(m, src)
}
func (m *CertificateSet) XXX_Size() int {
	return xxx_messageInfo_CertificateSet.Size(m)
}
func (m *CertificateSet) XXX_DiscardUnknown() {
	xxx_messageInfo_CertificateSet.DiscardUnknown(m)
}

var xxx_messageInfo_CertificateSet proto.InternalMessageInfo

func (m *CertificateSet) GetCertificateHash() []string {
	if m != nil {
		return m.CertificateHash
	}
	return nil
}

type EncodedTargets struct {
	Version              *int32   `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	SupportedTarget      []int64  `protobuf:"varint,2,rep,name=supportedTarget" json:"supportedTarget,omitempty"`
	OtherTarget          []int64  `protobuf:"varint,3,rep,name=otherTarget" json:"otherTarget,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncodedTargets) Reset()         { *m = EncodedTargets{} }
func (m *EncodedTargets) String() string { return proto.CompactTextString(m) }
func (*EncodedTargets) ProtoMessage()    {}
func (*EncodedTargets) Descriptor() ([]byte, []int) {
	return fileDescriptor_a19db626eddc4104, []int{26}
}

func (m *EncodedTargets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncodedTargets.Unmarshal(m, b)
}
func (m *EncodedTargets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncodedTargets.Marshal(b, m, deterministic)
}
func (m *EncodedTargets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncodedTargets.Merge(m, src)
}
func (m *EncodedTargets) XXX_Size() int {
	return xxx_messageInfo_EncodedTargets.Size(m)
}
func (m *EncodedTargets) XXX_DiscardUnknown() {
	xxx_messageInfo_EncodedTargets.DiscardUnknown(m)
}

var xxx_messageInfo_EncodedTargets proto.InternalMessageInfo

func (m *EncodedTargets) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *EncodedTargets) GetSupportedTarget() []int64 {
	if m != nil {
		return m.SupportedTarget
	}
	return nil
}

func (m *EncodedTargets) GetOtherTarget() []int64 {
	if m != nil {
		return m.OtherTarget
	}
	return nil
}

func init() {
	proto.RegisterType((*HttpCookie)(nil), "playapi.proto.finsky.HttpCookie")
	proto.RegisterType((*TimePeriod)(nil), "playapi.proto.finsky.TimePeriod")
	proto.RegisterType((*MonthAndDay)(nil), "playapi.proto.finsky.MonthAndDay")
	proto.RegisterType((*SignedData)(nil), "playapi.proto.finsky.SignedData")
	proto.RegisterType((*Docid)(nil), "playapi.proto.finsky.Docid")
	proto.RegisterType((*Offer)(nil), "playapi.proto.finsky.Offer")
	proto.RegisterType((*RentalTerms)(nil), "playapi.proto.finsky.RentalTerms")
	proto.RegisterType((*OfferPayment)(nil), "playapi.proto.finsky.OfferPayment")
	proto.RegisterType((*OfferPaymentPeriod)(nil), "playapi.proto.finsky.OfferPaymentPeriod")
	proto.RegisterType((*OfferPaymentOverride)(nil), "playapi.proto.finsky.OfferPaymentOverride")
	proto.RegisterType((*SeasonalSubscriptionInfo)(nil), "playapi.proto.finsky.SeasonalSubscriptionInfo")
	proto.RegisterType((*SeasonalSubscriptionInfo_Payment)(nil), "playapi.proto.finsky.SeasonalSubscriptionInfo.Payment")
	proto.RegisterType((*SubscriptionTerms)(nil), "playapi.proto.finsky.SubscriptionTerms")
	proto.RegisterType((*SubscriptionTerms_SubscriptionReplacement)(nil), "playapi.proto.finsky.SubscriptionTerms.SubscriptionReplacement")
	proto.RegisterType((*SubscriptionContentTerms)(nil), "playapi.proto.finsky.SubscriptionContentTerms")
	proto.RegisterType((*GroupLicenseKey)(nil), "playapi.proto.finsky.GroupLicenseKey")
	proto.RegisterType((*GroupLicenseInfo)(nil), "playapi.proto.finsky.GroupLicenseInfo")
	proto.RegisterType((*LicenseTerms)(nil), "playapi.proto.finsky.LicenseTerms")
	proto.RegisterType((*LicensedDocumentInfo)(nil), "playapi.proto.finsky.LicensedDocumentInfo")
	proto.RegisterType((*RedemptionRecordKey)(nil), "playapi.proto.finsky.RedemptionRecordKey")
	proto.RegisterType((*VoucherId)(nil), "playapi.proto.finsky.VoucherId")
	proto.RegisterType((*VoucherOfferTerms)(nil), "playapi.proto.finsky.VoucherOfferTerms")
	proto.RegisterType((*LibraryVoucher)(nil), "playapi.proto.finsky.LibraryVoucher")
	proto.RegisterType((*OwnershipInfo)(nil), "playapi.proto.finsky.OwnershipInfo")
	proto.RegisterType((*Image)(nil), "playapi.proto.finsky.Image")
	proto.RegisterType((*Image_Dimension)(nil), "playapi.proto.finsky.Image.Dimension")
	proto.RegisterType((*Image_Citation)(nil), "playapi.proto.finsky.Image.Citation")
	proto.RegisterType((*ImagePalette)(nil), "playapi.proto.finsky.ImagePalette")
	proto.RegisterType((*Attribution)(nil), "playapi.proto.finsky.Attribution")
	proto.RegisterType((*CertificateSet)(nil), "playapi.proto.finsky.CertificateSet")
	proto.RegisterType((*EncodedTargets)(nil), "playapi.proto.finsky.EncodedTargets")
}

func init() { proto.RegisterFile("play_common.proto", fileDescriptor_a19db626eddc4104) }

var fileDescriptor_a19db626eddc4104 = []byte{
	// 2629 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x39, 0x51, 0x6f, 0x1b, 0xc7,
	0xd1, 0xa0, 0x69, 0x4a, 0xe4, 0x50, 0x96, 0xa5, 0x8d, 0x12, 0xf3, 0x53, 0xfc, 0x25, 0xca, 0xd5,
	0x4d, 0xd5, 0xa0, 0x50, 0x5a, 0x17, 0x4d, 0x82, 0x34, 0x69, 0x62, 0x93, 0x52, 0xac, 0xc4, 0x8e,
	0x84, 0x95, 0xe2, 0xb4, 0x29, 0x90, 0x60, 0x75, 0xb7, 0x22, 0xb7, 0x3a, 0xde, 0x5e, 0xf6, 0xf6,
	0x68, 0xb3, 0x6f, 0x05, 0xfa, 0xd2, 0xc7, 0xbe, 0x16, 0xed, 0x0f, 0xc8, 0x53, 0x1f, 0xfa, 0xda,
	0x87, 0xfe, 0x8f, 0x02, 0x45, 0x9f, 0xfa, 0x2f, 0x8a, 0x16, 0xb3, 0xbb, 0x47, 0x2e, 0xa9, 0x3b,
	0x8a, 0x46, 0x8c, 0xbe, 0xdd, 0xcc, 0xce, 0xcc, 0xcd, 0xcc, 0xce, 0xcc, 0xce, 0xec, 0xc2, 0x66,
	0x1a, 0xb3, 0xf1, 0x57, 0xa1, 0x1c, 0x0e, 0x65, 0xb2, 0x97, 0x2a, 0xa9, 0x25, 0xd9, 0x42, 0x14,
	0x4b, 0x85, 0x05, 0xf7, 0xce, 0x45, 0x92, 0x5d, 0x8c, 0x83, 0xb7, 0x00, 0x1e, 0x68, 0x9d, 0x76,
	0xa5, 0xbc, 0x10, 0x9c, 0x10, 0xb8, 0x9e, 0xb0, 0x21, 0xef, 0xd4, 0x76, 0x6a, 0xbb, 0x2d, 0x6a,
	0xbe, 0xc9, 0x16, 0x34, 0x46, 0x2c, 0xce, 0x79, 0xe7, 0x9a, 0x41, 0x5a, 0x00, 0xf9, 0x4e, 0xc5,
	0x90, 0x1f, 0x73, 0x25, 0x64, 0x84, 0x7c, 0x79, 0x22, 0xb4, 0xe1, 0x6b, 0x50, 0xf3, 0x8d, 0x7c,
	0xa1, 0xcc, 0x13, 0x6d, 0xf8, 0x1a, 0xd4, 0x02, 0xc1, 0x4f, 0xa0, 0xfd, 0x48, 0x26, 0x7a, 0x70,
	0x2f, 0x89, 0x7a, 0x6c, 0x8c, 0x44, 0x43, 0x04, 0x1d, 0xa7, 0x05, 0xc8, 0x06, 0xd4, 0x23, 0x36,
	0x76, 0x8c, 0xf8, 0x19, 0x7c, 0x0c, 0x70, 0x22, 0xfa, 0x09, 0x8f, 0x7a, 0x4c, 0x33, 0xf2, 0x0a,
	0x40, 0x36, 0x81, 0x9c, 0xb2, 0x1e, 0x86, 0xdc, 0x86, 0x16, 0x42, 0x4c, 0xe7, 0xaa, 0x50, 0x7b,
	0x8a, 0x08, 0x7e, 0x01, 0x8d, 0x9e, 0x0c, 0x45, 0x44, 0x02, 0x58, 0x3b, 0x63, 0xe1, 0x05, 0x4f,
	0x22, 0x03, 0x3b, 0x41, 0x33, 0x38, 0xb4, 0x4c, 0x8f, 0x53, 0xee, 0x74, 0x31, 0xdf, 0xa4, 0x03,
	0xab, 0x8e, 0xa6, 0x53, 0x37, 0xe8, 0x02, 0x0c, 0xfe, 0xd4, 0x86, 0xc6, 0xd1, 0xf9, 0x39, 0x57,
	0xe4, 0x25, 0x58, 0x19, 0x8a, 0x50, 0xc9, 0xcc, 0x48, 0xad, 0x53, 0x07, 0xe1, 0x3f, 0xc3, 0x5c,
	0x29, 0x9e, 0x84, 0xe3, 0xae, 0x8c, 0x0a, 0xed, 0x66, 0x70, 0x64, 0x17, 0x6e, 0x9e, 0x4b, 0x35,
	0x64, 0x5a, 0xf3, 0xe8, 0xde, 0xd0, 0xf8, 0xb0, 0x6e, 0xc8, 0xe6, 0xd1, 0xa4, 0x0b, 0xeb, 0xa1,
	0x4c, 0x46, 0x5c, 0x69, 0x1e, 0x1d, 0x2b, 0x11, 0xf2, 0xce, 0xf5, 0x9d, 0xfa, 0x6e, 0xfb, 0xee,
	0xcb, 0x7b, 0x65, 0x9b, 0xbd, 0x67, 0x54, 0xa3, 0x73, 0x2c, 0xe4, 0x2e, 0x6c, 0x85, 0x03, 0x1e,
	0x5e, 0xc8, 0x5c, 0x1f, 0xc4, 0xf2, 0x09, 0xe5, 0x5f, 0xe7, 0x42, 0xf1, 0xa8, 0xd3, 0xd8, 0xa9,
	0xed, 0x36, 0x69, 0xe9, 0x9a, 0x51, 0x31, 0x8f, 0x63, 0x23, 0xe0, 0x91, 0xb5, 0x73, 0xc5, 0xd8,
	0x39, 0x8f, 0x26, 0x3f, 0x84, 0x17, 0x26, 0x5a, 0x1f, 0xe4, 0x71, 0xec, 0x0c, 0x5a, 0x35, 0x06,
	0x95, 0x2d, 0xe1, 0xee, 0x49, 0x54, 0xf4, 0x14, 0xfd, 0xde, 0x34, 0x0e, 0x9e, 0x22, 0x48, 0x17,
	0xda, 0x8a, 0x27, 0x9a, 0xc5, 0xa7, 0x5c, 0x0d, 0xb3, 0x4e, 0x6b, 0xa7, 0xb6, 0xdb, 0xbe, 0xfb,
	0x5a, 0xb9, 0xbd, 0x74, 0x4a, 0x48, 0x7d, 0x2e, 0x0c, 0x20, 0x99, 0x9c, 0xb0, 0x98, 0xf7, 0x98,
	0xe6, 0x1d, 0x30, 0x9a, 0x7b, 0x18, 0xf2, 0x3a, 0xac, 0xa7, 0x4a, 0x0e, 0xa5, 0x16, 0x32, 0x79,
	0xc8, 0xce, 0x78, 0xdc, 0x69, 0xef, 0xd4, 0x77, 0x5b, 0x74, 0x0e, 0x4b, 0x3e, 0x83, 0xcd, 0x2c,
	0x3f, 0xcb, 0x42, 0x25, 0x52, 0x44, 0x5a, 0x95, 0xd6, 0x8c, 0x4a, 0xdf, 0x2b, 0x57, 0xe9, 0x64,
	0x9e, 0x9c, 0x5e, 0x96, 0x40, 0xee, 0xc0, 0x8d, 0x89, 0x63, 0x3e, 0xc5, 0x7c, 0xbc, 0x61, 0xbc,
	0x35, 0x8b, 0xc4, 0x7d, 0x9b, 0x20, 0x7a, 0x7c, 0x22, 0xa2, 0xb3, 0x6e, 0x88, 0x4b, 0xd7, 0xc8,
	0x36, 0x34, 0x53, 0xc5, 0xa5, 0x8a, 0xb8, 0xea, 0xdc, 0x34, 0xfb, 0x3b, 0x81, 0xc9, 0x31, 0x7c,
	0x67, 0xea, 0x82, 0x9e, 0xc8, 0x50, 0x7f, 0xcc, 0xf1, 0x2f, 0x64, 0xc2, 0x8f, 0xce, 0xcf, 0x33,
	0xae, 0x1f, 0x65, 0x3c, 0xec, 0x6c, 0x98, 0x1d, 0x59, 0x86, 0x94, 0xfc, 0x00, 0x36, 0x63, 0x11,
	0xf2, 0x24, 0xe3, 0xd1, 0xd1, 0x64, 0x47, 0x37, 0x0d, 0xff, 0xe5, 0x05, 0xf2, 0x2b, 0xe8, 0xf8,
	0xae, 0xe8, 0xca, 0x44, 0xf3, 0x44, 0x5b, 0x9f, 0x12, 0xe3, 0xd3, 0xbd, 0xab, 0x7d, 0xea, 0x73,
	0xd1, 0x4a, 0x79, 0x98, 0xc2, 0x26, 0xa4, 0x0e, 0xa3, 0xce, 0x0b, 0xc6, 0x5d, 0x05, 0x48, 0x0e,
	0xe0, 0x95, 0xc2, 0x23, 0x07, 0x79, 0x7c, 0x2e, 0xe2, 0x78, 0xc8, 0x13, 0xed, 0x6c, 0x34, 0xe1,
	0xb2, 0x65, 0xc2, 0xe5, 0x0a, 0x2a, 0x72, 0x00, 0x6b, 0xce, 0x44, 0x6b, 0xc1, 0x8b, 0xc6, 0x82,
	0xa0, 0xdc, 0x82, 0x87, 0x1e, 0x25, 0x9d, 0xe1, 0xc3, 0x4c, 0xd3, 0x7c, 0x98, 0x4a, 0xc5, 0x94,
	0x88, 0xc7, 0x07, 0x8a, 0xf3, 0xce, 0x4b, 0x66, 0xe3, 0xe6, 0xd1, 0xe4, 0x13, 0x58, 0x1b, 0xc9,
	0x3c, 0x1c, 0x70, 0x65, 0xff, 0x78, 0x6b, 0x51, 0x1c, 0x3e, 0xb6, 0x94, 0xd6, 0xfb, 0xf6, 0xb7,
	0x3e, 0x33, 0xaa, 0x6f, 0x3c, 0x72, 0xcc, 0xc6, 0x68, 0x59, 0xa7, 0x63, 0xea, 0x4a, 0xb0, 0xa0,
	0xae, 0x38, 0x4a, 0x3a, 0xc3, 0x87, 0x21, 0xa0, 0x78, 0xca, 0x99, 0x7e, 0xc8, 0x32, 0x5d, 0x08,
	0xfb, 0x3f, 0x63, 0xc0, 0xe5, 0x05, 0xcc, 0xbb, 0xb3, 0x7c, 0x7c, 0x3f, 0xd7, 0xba, 0xc8, 0xbb,
	0x6d, 0xb3, 0x3b, 0x73, 0x58, 0xf2, 0x16, 0xbc, 0x24, 0x92, 0x4c, 0xb3, 0x44, 0x1f, 0xe7, 0x2a,
	0x1c, 0xb0, 0x8c, 0xef, 0x27, 0xec, 0x2c, 0xe6, 0x51, 0xe7, 0x65, 0x23, 0xba, 0x62, 0x35, 0xf8,
	0xfb, 0x35, 0x68, 0x7b, 0x45, 0x81, 0xdc, 0x87, 0xdb, 0xbd, 0xfd, 0x63, 0xba, 0xdf, 0xbd, 0x77,
	0xba, 0xdf, 0xfb, 0x48, 0x21, 0x87, 0x39, 0xd0, 0x4e, 0x78, 0x28, 0x93, 0x28, 0x73, 0xa7, 0xd2,
	0x42, 0x1a, 0xf2, 0x00, 0x5e, 0x9d, 0xae, 0xdf, 0x0b, 0xb5, 0x18, 0x31, 0xcd, 0x67, 0xc5, 0xd8,
	0xc3, 0xe3, 0x2a, 0x32, 0x72, 0x1f, 0xda, 0xfd, 0xa9, 0x7c, 0x53, 0xf3, 0xdb, 0x77, 0x77, 0xca,
	0x5d, 0x3e, 0x3d, 0x7c, 0xa9, 0xcf, 0x44, 0x1e, 0xc0, 0x3a, 0x9b, 0x11, 0xde, 0xb9, 0xbe, 0xa4,
	0x98, 0x39, 0x3e, 0x2c, 0xdc, 0x46, 0xf0, 0x7e, 0x12, 0x21, 0x55, 0x61, 0x4b, 0xc3, 0x44, 0x7f,
	0xd9, 0x52, 0xf0, 0xdb, 0x6b, 0xb0, 0xe6, 0x87, 0xc2, 0xb7, 0x3a, 0x04, 0x7f, 0x0e, 0xc4, 0x0f,
	0xa4, 0x19, 0x9f, 0xec, 0x5e, 0x1d, 0x86, 0xce, 0xa8, 0x12, 0x19, 0xe4, 0x4b, 0xd8, 0xf2, 0xb1,
	0x47, 0x23, 0xae, 0x94, 0x88, 0x8a, 0xa3, 0xf3, 0x8d, 0xab, 0x65, 0x17, 0x1c, 0xb4, 0x54, 0x4e,
	0xf0, 0xb7, 0x1a, 0x90, 0xcb, 0xaa, 0x90, 0xf7, 0xa0, 0x19, 0xe5, 0x8a, 0x99, 0x12, 0x5d, 0x5b,
	0x72, 0x4f, 0x26, 0x1c, 0xe4, 0x6d, 0x68, 0x64, 0x9a, 0x29, 0xdb, 0x4d, 0x55, 0x1e, 0x78, 0x5e,
	0x6b, 0x45, 0x2d, 0x3d, 0xf9, 0x31, 0xd4, 0x8b, 0x46, 0x65, 0x29, 0x36, 0xa4, 0x0e, 0xfe, 0x58,
	0x83, 0xad, 0x32, 0x8b, 0x2b, 0x77, 0xf4, 0x7f, 0xab, 0xde, 0x3f, 0xeb, 0xd0, 0x39, 0xe1, 0x2c,
	0x93, 0x09, 0x8b, 0xfd, 0xe2, 0x7f, 0x98, 0x9c, 0x4b, 0x6c, 0x10, 0x52, 0x9b, 0x56, 0x46, 0xa1,
	0xda, 0xb2, 0x92, 0x7d, 0x2e, 0xf2, 0x01, 0xb4, 0x2c, 0xb8, 0x9f, 0x44, 0xcb, 0xdb, 0x34, 0xe5,
	0xb1, 0x07, 0xad, 0x54, 0x4c, 0x73, 0x9b, 0x81, 0xe6, 0xa0, 0xb5, 0x30, 0x19, 0xc1, 0x76, 0x2a,
	0x33, 0x7d, 0xaa, 0x04, 0x8b, 0xbb, 0xa6, 0x17, 0xcb, 0x84, 0x4c, 0x8a, 0xe2, 0xd8, 0x30, 0x7f,
	0x7b, 0xab, 0xe2, 0xa8, 0xab, 0xb0, 0x7a, 0xaf, 0xa8, 0xbe, 0x0b, 0x24, 0x6f, 0x7f, 0x53, 0x83,
	0xd5, 0xe7, 0x91, 0x9a, 0xcb, 0xf7, 0xa7, 0xef, 0xc0, 0x4a, 0xfa, 0x6c, 0x55, 0xc8, 0xd1, 0x07,
	0xff, 0x6e, 0xc2, 0xe6, 0xa5, 0x5e, 0x89, 0x7c, 0x0c, 0x37, 0x15, 0x47, 0x5d, 0x44, 0xd2, 0x77,
	0x15, 0x61, 0xd9, 0x54, 0x9a, 0x67, 0xc4, 0x6a, 0xab, 0xd1, 0x4f, 0x4e, 0xce, 0xb5, 0x65, 0xab,
	0xad, 0xc7, 0x44, 0x3e, 0x85, 0x60, 0x62, 0xb2, 0x69, 0x7a, 0x3f, 0x17, 0x7a, 0x40, 0xb9, 0xf3,
	0x16, 0xf7, 0x8a, 0x56, 0x8b, 0x2e, 0x41, 0x69, 0x5a, 0xa0, 0x8a, 0x1d, 0x76, 0x1e, 0xdc, 0x7b,
	0xb6, 0xb8, 0xa0, 0x95, 0xf2, 0xc8, 0x07, 0xb0, 0xa6, 0x78, 0x1a, 0xb3, 0x90, 0xdb, 0xe9, 0xa7,
	0xb1, 0x68, 0x72, 0x30, 0x24, 0x74, 0x86, 0xc1, 0x1d, 0x57, 0x13, 0x2b, 0x57, 0x9e, 0xe1, 0xb8,
	0x9a, 0x18, 0xbc, 0x0d, 0x4d, 0xc5, 0x71, 0x34, 0xcb, 0x53, 0x33, 0x12, 0x34, 0xe9, 0x04, 0xc6,
	0x4e, 0x4c, 0x24, 0x42, 0x0b, 0x16, 0x3f, 0x66, 0xb1, 0x88, 0x3e, 0x4b, 0xb4, 0x88, 0x51, 0x4e,
	0xa6, 0xd9, 0x30, 0x35, 0xad, 0x68, 0xd3, 0x76, 0x62, 0x8b, 0xa9, 0xc8, 0x3b, 0x70, 0x2b, 0xe1,
	0x4f, 0x8b, 0x1e, 0xa3, 0xeb, 0x47, 0x77, 0xcb, 0xec, 0x4c, 0xd5, 0x32, 0xb6, 0x19, 0xde, 0x92,
	0x3f, 0xec, 0xd8, 0x91, 0xa1, 0x62, 0x95, 0xf4, 0xe0, 0xff, 0xb9, 0xe9, 0x38, 0xee, 0xa5, 0xe9,
	0x49, 0xca, 0x43, 0x71, 0x2e, 0x78, 0x74, 0xea, 0x05, 0x5b, 0xdb, 0x98, 0xba, 0x98, 0x88, 0x8c,
	0xe1, 0x96, 0xdf, 0xbf, 0x52, 0xeb, 0x7b, 0x53, 0x23, 0xec, 0x88, 0xf1, 0xc1, 0x92, 0x23, 0xc6,
	0x0c, 0xc6, 0x13, 0x43, 0xab, 0xe4, 0x6f, 0xff, 0xa7, 0x06, 0xb7, 0x2a, 0x98, 0xc8, 0xdb, 0xd0,
	0x4c, 0xf8, 0x93, 0xe9, 0xc4, 0x7c, 0x45, 0xcc, 0x4c, 0x88, 0x91, 0x51, 0xc6, 0x6e, 0xd4, 0xbe,
	0x76, 0x75, 0xb0, 0x4d, 0x88, 0x71, 0x1b, 0x2e, 0x38, 0x4f, 0x3f, 0xe5, 0x4f, 0xf5, 0x34, 0x63,
	0x70, 0x8f, 0x4d, 0x66, 0x35, 0x69, 0xc5, 0x2a, 0x79, 0x17, 0x3a, 0x2e, 0x60, 0x8f, 0x92, 0x03,
	0xa1, 0x32, 0x6f, 0xdd, 0xd5, 0xe4, 0xca, 0xf5, 0xe0, 0x02, 0x3a, 0x55, 0x63, 0x05, 0x39, 0x82,
	0x2d, 0xe5, 0x06, 0x61, 0x9f, 0x66, 0x19, 0x6f, 0x94, 0x32, 0x06, 0xff, 0xa8, 0xc1, 0xcd, 0x8f,
	0x94, 0xcc, 0x53, 0x37, 0x07, 0x7c, 0xc2, 0xc7, 0xe4, 0x0d, 0xd8, 0x88, 0x58, 0x36, 0xe0, 0xaa,
	0x9b, 0x67, 0x5a, 0x0e, 0xcd, 0xa8, 0x82, 0x3f, 0x58, 0xa1, 0x97, 0xf0, 0xe4, 0x47, 0xd0, 0x88,
	0x9c, 0x5b, 0xaf, 0xd4, 0xc0, 0x52, 0x96, 0x8f, 0x66, 0xf5, 0xaa, 0xd1, 0xac, 0xb8, 0x05, 0xb9,
	0xee, 0xdd, 0x82, 0xbc, 0x01, 0x1b, 0x76, 0xa4, 0xb6, 0xe1, 0xda, 0x63, 0x63, 0xdb, 0x1c, 0x36,
	0xe8, 0x25, 0x7c, 0xf0, 0x97, 0x1a, 0x6c, 0xf8, 0x06, 0x9a, 0x02, 0x54, 0xaa, 0x42, 0xad, 0x4a,
	0x85, 0x1d, 0x68, 0xf7, 0x99, 0x60, 0x46, 0xca, 0xa1, 0xb5, 0x74, 0x85, 0xfa, 0x28, 0x72, 0x04,
	0x37, 0xfb, 0xb3, 0x4e, 0x74, 0x6d, 0xc5, 0x77, 0xcb, 0xfd, 0x31, 0xe7, 0x71, 0x3a, 0xcf, 0x1d,
	0x7c, 0x05, 0x6b, 0xfe, 0x60, 0x56, 0xf6, 0x83, 0xda, 0xb7, 0xfa, 0xc1, 0x9f, 0xaf, 0xc1, 0x96,
	0x03, 0x31, 0xd4, 0x73, 0xcc, 0x2f, 0xe3, 0x9a, 0x39, 0x63, 0x6b, 0x3b, 0xf5, 0x79, 0x63, 0x3f,
	0x84, 0x97, 0x7d, 0x69, 0x5d, 0x77, 0x49, 0x73, 0x84, 0x13, 0xa9, 0x73, 0x4f, 0x8b, 0x2e, 0x22,
	0x79, 0xee, 0xee, 0xc2, 0x80, 0x60, 0x99, 0xbd, 0x85, 0xbb, 0x3f, 0xfe, 0x88, 0x09, 0x76, 0x68,
	0x8f, 0xfd, 0x15, 0x7a, 0x09, 0x8f, 0x29, 0xed, 0x4d, 0x43, 0x66, 0xd5, 0x18, 0x6f, 0x6f, 0x9d,
	0x5a, 0xb4, 0x62, 0x35, 0xf8, 0xa6, 0x06, 0x2f, 0x50, 0x1e, 0xf1, 0xa1, 0x2b, 0x4b, 0xa1, 0x54,
	0x11, 0xfe, 0x7b, 0x07, 0xda, 0x69, 0x7e, 0x16, 0x0b, 0x4c, 0x0c, 0x97, 0x28, 0x75, 0xea, 0xa3,
	0xc8, 0x2b, 0x00, 0x21, 0x1b, 0xa6, 0x4c, 0xf4, 0x13, 0xe7, 0x9f, 0x3a, 0xf5, 0x30, 0x28, 0x21,
	0x94, 0x11, 0x2f, 0x5c, 0x5e, 0xb7, 0x12, 0x3c, 0x94, 0x3d, 0xab, 0xf0, 0x87, 0xce, 0xae, 0x3a,
	0x9d, 0xc0, 0x93, 0x04, 0x69, 0x4c, 0x13, 0x24, 0xf8, 0x5d, 0x0d, 0x5a, 0x6e, 0xcc, 0x3e, 0x8c,
	0xf0, 0xb8, 0x75, 0x03, 0xf6, 0xd2, 0xa5, 0x73, 0x86, 0x81, 0xfc, 0x14, 0xea, 0x17, 0x7c, 0xec,
	0x52, 0xfc, 0xfb, 0x55, 0x17, 0x5e, 0x97, 0x5c, 0x43, 0x91, 0x2b, 0xf8, 0x6b, 0x0d, 0x36, 0x2f,
	0x8d, 0xfc, 0x25, 0x3a, 0xd5, 0x9f, 0x4d, 0xa7, 0x3d, 0x20, 0x0e, 0xf6, 0x0f, 0x47, 0xeb, 0xdc,
	0x92, 0x15, 0xdc, 0x76, 0x87, 0x3d, 0x28, 0x6d, 0x20, 0x2b, 0x56, 0x83, 0x23, 0x58, 0x7f, 0x28,
	0xce, 0x14, 0x53, 0x63, 0x67, 0x04, 0x79, 0x1f, 0x5a, 0xa3, 0xc2, 0xb7, 0xce, 0x97, 0xaf, 0x2e,
	0xbc, 0xe9, 0x38, 0x8c, 0xe8, 0x94, 0x23, 0xf8, 0x4d, 0x13, 0x6e, 0x1c, 0x3d, 0x49, 0xb8, 0xca,
	0x06, 0x22, 0x35, 0x29, 0xf7, 0x0e, 0xdc, 0xb2, 0x7d, 0x84, 0x39, 0x36, 0x67, 0xda, 0x0c, 0x1b,
	0x4d, 0x55, 0xcb, 0xc8, 0x39, 0xaa, 0x68, 0x50, 0xac, 0x27, 0xaa, 0x96, 0xb1, 0xd9, 0x66, 0xb9,
	0x96, 0x94, 0x27, 0xfc, 0x89, 0x48, 0xfa, 0xee, 0x38, 0x9b, 0xc1, 0x91, 0x9f, 0xc1, 0xb6, 0xe2,
	0xe7, 0xb9, 0x9d, 0xb4, 0x65, 0xae, 0x67, 0x7f, 0x60, 0xe3, 0x70, 0x01, 0x05, 0xb9, 0x0f, 0xb7,
	0x71, 0x24, 0xe8, 0xf1, 0x58, 0x8c, 0xb8, 0x1a, 0x53, 0x43, 0xf9, 0xb9, 0x48, 0x22, 0xf9, 0xc4,
	0x48, 0xb0, 0xf3, 0xfc, 0x42, 0x1a, 0xf2, 0x18, 0x5e, 0x8c, 0xf8, 0x88, 0xc7, 0x32, 0xe5, 0xaa,
	0xb8, 0x52, 0x31, 0x3d, 0xe9, 0xc2, 0x9e, 0x6f, 0x7a, 0x61, 0x4f, 0xcb, 0xd9, 0x31, 0x27, 0x8b,
	0x5b, 0x34, 0x1e, 0xb9, 0xfe, 0xcf, 0xc3, 0xe0, 0x90, 0x32, 0x10, 0x51, 0xc4, 0x13, 0xd3, 0xe9,
	0x35, 0xa9, 0x83, 0x9e, 0xcf, 0x1d, 0x30, 0x85, 0x8d, 0xfe, 0xdc, 0x91, 0x64, 0xda, 0xba, 0xf6,
	0xdd, 0xd7, 0xaf, 0x2e, 0x80, 0xa6, 0xb7, 0xbe, 0xc4, 0x4f, 0xbe, 0x84, 0xad, 0xb8, 0xa4, 0x9e,
	0x9b, 0x7e, 0xaf, 0xf2, 0x6a, 0xa1, 0xec, 0x04, 0xa0, 0xa5, 0x72, 0xb0, 0x04, 0x7d, 0x9d, 0xb3,
	0x44, 0x0b, 0x3d, 0x36, 0x3d, 0x60, 0x83, 0x4e, 0x60, 0x6c, 0x97, 0x63, 0x9b, 0x23, 0xfb, 0x4f,
	0x53, 0xa1, 0x4a, 0xe2, 0x78, 0xdd, 0xb6, 0xcb, 0x8b, 0xa9, 0xc8, 0x43, 0x58, 0x8f, 0x67, 0x72,
	0xcd, 0x5c, 0x14, 0xb7, 0xef, 0xde, 0xa9, 0xd2, 0xde, 0xa7, 0xa5, 0x73, 0xbc, 0xe4, 0x7d, 0x68,
	0x9f, 0xe5, 0x49, 0x14, 0xbb, 0x21, 0x63, 0xe3, 0xea, 0xaa, 0xe7, 0xd3, 0x93, 0x2d, 0x68, 0x9c,
	0xc9, 0x24, 0xcf, 0xcc, 0xad, 0x71, 0x93, 0x5a, 0x00, 0xfb, 0xeb, 0x4c, 0x4b, 0xc5, 0xa3, 0xaa,
	0xc1, 0x80, 0x18, 0x4b, 0x17, 0x13, 0x05, 0x7f, 0x58, 0x85, 0xc6, 0xe1, 0x90, 0xf5, 0x39, 0xb9,
	0x0d, 0x2d, 0x81, 0x1f, 0x5e, 0x07, 0x32, 0x45, 0x90, 0x2e, 0xb4, 0x22, 0x31, 0xe4, 0x09, 0x8e,
	0xd2, 0x26, 0xa3, 0xa1, 0xea, 0x88, 0x34, 0xd2, 0xf6, 0x7a, 0x05, 0x31, 0x9d, 0xf2, 0xe1, 0xce,
	0x19, 0x89, 0x9f, 0xa9, 0xd8, 0x1d, 0x71, 0x13, 0xd8, 0x1c, 0x9c, 0xb1, 0x3e, 0xe5, 0x4f, 0xf5,
	0x43, 0x19, 0xb2, 0x58, 0xfc, 0x9a, 0xdb, 0x69, 0xaa, 0x45, 0x2f, 0xe1, 0xcd, 0xd3, 0x16, 0x76,
	0xa9, 0x46, 0xd0, 0xaa, 0x7b, 0xda, 0x2a, 0x10, 0x58, 0x8f, 0x53, 0x99, 0x09, 0x3b, 0xe3, 0x9d,
	0xf0, 0xaf, 0x73, 0xd3, 0xeb, 0xda, 0x37, 0x94, 0x92, 0x15, 0xac, 0xc7, 0x59, 0x9e, 0xa6, 0x52,
	0xe9, 0xec, 0x40, 0x9c, 0xa3, 0x88, 0x23, 0x73, 0x7a, 0xd8, 0x9c, 0x6a, 0xd2, 0x8a, 0x55, 0xf2,
	0x21, 0x34, 0x43, 0xa1, 0xed, 0x5d, 0x16, 0x18, 0x8f, 0xdc, 0x59, 0xe4, 0x91, 0xae, 0xa3, 0xa5,
	0x13, 0x2e, 0xb2, 0x0b, 0x37, 0x8b, 0xbb, 0xad, 0xe2, 0x66, 0x71, 0xdd, 0xa8, 0x39, 0x8f, 0xc6,
	0x22, 0x79, 0x2e, 0xe2, 0xb8, 0x2b, 0x63, 0xa9, 0x68, 0xff, 0xcc, 0x44, 0x63, 0x8b, 0xce, 0xe0,
	0x48, 0x07, 0x56, 0xb1, 0x68, 0xf6, 0x79, 0x62, 0x22, 0xac, 0x49, 0x0b, 0x10, 0x4b, 0x05, 0xd3,
	0x5a, 0x89, 0xb3, 0xdc, 0x28, 0xbb, 0xb9, 0xa8, 0x54, 0xdc, 0x9b, 0x12, 0x52, 0x9f, 0x0b, 0xdd,
	0x7a, 0xc6, 0xc2, 0x0b, 0x4c, 0xf7, 0x24, 0x9a, 0x28, 0x62, 0x1f, 0x0e, 0x4a, 0x56, 0xc8, 0x7b,
	0xb0, 0x9a, 0xb2, 0x98, 0x6b, 0xf7, 0x58, 0x50, 0x79, 0x6f, 0x6e, 0xbc, 0x73, 0x6c, 0x29, 0x69,
	0xc1, 0x82, 0x9d, 0x48, 0xc4, 0x47, 0x22, 0xe4, 0xdd, 0x98, 0x65, 0xf6, 0xe1, 0xa0, 0x41, 0x7d,
	0x14, 0x9e, 0x09, 0xfe, 0xc6, 0x3c, 0x92, 0x89, 0xec, 0x2b, 0x36, 0xb4, 0xbb, 0xe3, 0x9e, 0x07,
	0x16, 0x50, 0x6c, 0xff, 0x12, 0x5a, 0x93, 0x20, 0xc5, 0x14, 0x7b, 0x22, 0x22, 0x3d, 0x70, 0xdd,
	0xbf, 0x05, 0x4c, 0xe9, 0xe5, 0xa2, 0x3f, 0xd0, 0xae, 0xe7, 0x77, 0x10, 0x2a, 0xc7, 0xb2, 0x94,
	0x87, 0x9a, 0xe2, 0x26, 0x99, 0x44, 0x6b, 0x50, 0x1f, 0xb5, 0xdd, 0x83, 0x66, 0xb1, 0xdf, 0xe4,
	0x75, 0x58, 0xd7, 0x42, 0xc7, 0x7c, 0x1a, 0xd7, 0x6d, 0x7b, 0x9f, 0x3f, 0x8b, 0x25, 0x1b, 0x50,
	0xcf, 0x55, 0x6c, 0x4a, 0x5a, 0x8b, 0xe2, 0x67, 0xf0, 0xaf, 0x1a, 0xac, 0xf9, 0xee, 0xc1, 0x80,
	0x89, 0x51, 0x83, 0xc7, 0x58, 0x5f, 0x12, 0x8d, 0x1b, 0x60, 0xdf, 0x6b, 0xe7, 0xd1, 0x78, 0xaa,
	0x8c, 0xa6, 0x44, 0xb6, 0x13, 0xf6, 0x30, 0xa8, 0x54, 0xc4, 0xd4, 0x85, 0x27, 0xc8, 0x36, 0x1f,
	0x73, 0x58, 0x72, 0x07, 0x6e, 0x18, 0xd1, 0x8f, 0x72, 0xcd, 0x23, 0x24, 0xbb, 0x6e, 0x5f, 0xe1,
	0x66, 0x90, 0x98, 0xd8, 0xc3, 0x82, 0xc0, 0x25, 0x76, 0x01, 0x63, 0xe8, 0xa2, 0xcc, 0x89, 0x00,
	0x9b, 0xd4, 0x33, 0xb8, 0xe0, 0xf7, 0x35, 0x68, 0x7b, 0x81, 0x87, 0x0e, 0xce, 0x64, 0xae, 0x70,
	0x84, 0xd5, 0x71, 0xf1, 0x12, 0xef, 0xa3, 0x4c, 0x09, 0x30, 0x20, 0x96, 0x80, 0xe2, 0x75, 0xbb,
	0x40, 0xe0, 0x3f, 0x8b, 0xf7, 0x23, 0x23, 0xc0, 0xda, 0x36, 0x83, 0x43, 0x0f, 0x39, 0x18, 0x45,
	0x58, 0xb3, 0x3c, 0x4c, 0xf0, 0x2e, 0xac, 0x77, 0xb9, 0xd2, 0xe2, 0x5c, 0x84, 0x4c, 0xf3, 0x13,
	0xae, 0xd1, 0xfb, 0xe1, 0x14, 0xf3, 0x80, 0x65, 0x03, 0xd3, 0x2c, 0xb6, 0xe8, 0x3c, 0x3a, 0x18,
	0xc1, 0xfa, 0x7e, 0x82, 0x6d, 0x73, 0x74, 0xca, 0x54, 0x9f, 0x6b, 0xf3, 0xd6, 0xe6, 0x2e, 0x22,
	0x5d, 0x6d, 0x2d, 0x40, 0x94, 0xea, 0xa2, 0xb4, 0xa0, 0x36, 0x17, 0x03, 0x75, 0x3a, 0x8f, 0x46,
	0xaf, 0x48, 0x3d, 0xe0, 0xca, 0x51, 0xd5, 0x0d, 0x95, 0x8f, 0xba, 0xff, 0xda, 0x17, 0xaf, 0xf6,
	0x85, 0x1e, 0xe4, 0x67, 0x7b, 0xa1, 0x1c, 0xbe, 0xf9, 0xb1, 0xcc, 0x06, 0x39, 0xeb, 0x49, 0x9e,
	0xbd, 0x89, 0x07, 0x12, 0x4e, 0xf9, 0xe3, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x57, 0xe6, 0x08,
	0x02, 0x15, 0x21, 0x00, 0x00,
}
